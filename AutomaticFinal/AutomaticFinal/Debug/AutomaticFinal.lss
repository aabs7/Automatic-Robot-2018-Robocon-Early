
AutomaticFinal.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800200  00000d1a  00000dae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d1a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000080  00800230  00800230  00000dde  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000dde  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e10  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a8  00000000  00000000  00000e50  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002129  00000000  00000000  00000ff8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001169  00000000  00000000  00003121  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000df8  00000000  00000000  0000428a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000056c  00000000  00000000  00005084  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c21  00000000  00000000  000055f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ddd  00000000  00000000  00006211  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000180  00000000  00000000  00006fee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	72 c0       	rjmp	.+228    	; 0xe6 <__ctors_end>
   2:	00 00       	nop
   4:	ec c1       	rjmp	.+984    	; 0x3de <__vector_1>
   6:	00 00       	nop
   8:	24 c2       	rjmp	.+1096   	; 0x452 <__vector_2>
   a:	00 00       	nop
   c:	3f c2       	rjmp	.+1150   	; 0x48c <__vector_3>
   e:	00 00       	nop
  10:	03 c2       	rjmp	.+1030   	; 0x418 <__vector_4>
  12:	00 00       	nop
  14:	96 c0       	rjmp	.+300    	; 0x142 <__bad_interrupt>
  16:	00 00       	nop
  18:	94 c0       	rjmp	.+296    	; 0x142 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	92 c0       	rjmp	.+292    	; 0x142 <__bad_interrupt>
  1e:	00 00       	nop
  20:	90 c0       	rjmp	.+288    	; 0x142 <__bad_interrupt>
  22:	00 00       	nop
  24:	8e c0       	rjmp	.+284    	; 0x142 <__bad_interrupt>
  26:	00 00       	nop
  28:	8c c0       	rjmp	.+280    	; 0x142 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	8a c0       	rjmp	.+276    	; 0x142 <__bad_interrupt>
  2e:	00 00       	nop
  30:	88 c0       	rjmp	.+272    	; 0x142 <__bad_interrupt>
  32:	00 00       	nop
  34:	86 c0       	rjmp	.+268    	; 0x142 <__bad_interrupt>
  36:	00 00       	nop
  38:	84 c0       	rjmp	.+264    	; 0x142 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	82 c0       	rjmp	.+260    	; 0x142 <__bad_interrupt>
  3e:	00 00       	nop
  40:	80 c0       	rjmp	.+256    	; 0x142 <__bad_interrupt>
  42:	00 00       	nop
  44:	7e c0       	rjmp	.+252    	; 0x142 <__bad_interrupt>
  46:	00 00       	nop
  48:	7c c0       	rjmp	.+248    	; 0x142 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	7a c0       	rjmp	.+244    	; 0x142 <__bad_interrupt>
  4e:	00 00       	nop
  50:	78 c0       	rjmp	.+240    	; 0x142 <__bad_interrupt>
  52:	00 00       	nop
  54:	76 c0       	rjmp	.+236    	; 0x142 <__bad_interrupt>
  56:	00 00       	nop
  58:	74 c0       	rjmp	.+232    	; 0x142 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c2       	rjmp	.+1128   	; 0x4c6 <__vector_23>
  5e:	00 00       	nop
  60:	70 c0       	rjmp	.+224    	; 0x142 <__bad_interrupt>
  62:	00 00       	nop
  64:	66 c4       	rjmp	.+2252   	; 0x932 <__vector_25>
  66:	00 00       	nop
  68:	6c c0       	rjmp	.+216    	; 0x142 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	6a c0       	rjmp	.+212    	; 0x142 <__bad_interrupt>
  6e:	00 00       	nop
  70:	68 c0       	rjmp	.+208    	; 0x142 <__bad_interrupt>
  72:	00 00       	nop
  74:	66 c0       	rjmp	.+204    	; 0x142 <__bad_interrupt>
  76:	00 00       	nop
  78:	64 c0       	rjmp	.+200    	; 0x142 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	62 c0       	rjmp	.+196    	; 0x142 <__bad_interrupt>
  7e:	00 00       	nop
  80:	60 c0       	rjmp	.+192    	; 0x142 <__bad_interrupt>
  82:	00 00       	nop
  84:	5e c0       	rjmp	.+188    	; 0x142 <__bad_interrupt>
  86:	00 00       	nop
  88:	5c c0       	rjmp	.+184    	; 0x142 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	5a c0       	rjmp	.+180    	; 0x142 <__bad_interrupt>
  8e:	00 00       	nop
  90:	60 c4       	rjmp	.+2240   	; 0x952 <__vector_36>
  92:	00 00       	nop
  94:	56 c0       	rjmp	.+172    	; 0x142 <__bad_interrupt>
  96:	00 00       	nop
  98:	54 c0       	rjmp	.+168    	; 0x142 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	52 c0       	rjmp	.+164    	; 0x142 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	50 c0       	rjmp	.+160    	; 0x142 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	4e c0       	rjmp	.+156    	; 0x142 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	4c c0       	rjmp	.+152    	; 0x142 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	4a c0       	rjmp	.+148    	; 0x142 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	48 c0       	rjmp	.+144    	; 0x142 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	46 c0       	rjmp	.+140    	; 0x142 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	44 c0       	rjmp	.+136    	; 0x142 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	42 c0       	rjmp	.+132    	; 0x142 <__bad_interrupt>
  be:	00 00       	nop
  c0:	40 c0       	rjmp	.+128    	; 0x142 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	3e c0       	rjmp	.+124    	; 0x142 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	3c c0       	rjmp	.+120    	; 0x142 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	52 c4       	rjmp	.+2212   	; 0x972 <__vector_51>
  ce:	00 00       	nop
  d0:	38 c0       	rjmp	.+112    	; 0x142 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	36 c0       	rjmp	.+108    	; 0x142 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	34 c0       	rjmp	.+104    	; 0x142 <__bad_interrupt>
  da:	00 00       	nop
  dc:	32 c0       	rjmp	.+100    	; 0x142 <__bad_interrupt>
  de:	00 00       	nop
  e0:	30 c0       	rjmp	.+96     	; 0x142 <__bad_interrupt>
	...

000000e4 <__ctors_start>:
  e4:	b0 02       	muls	r27, r16

000000e6 <__ctors_end>:
  e6:	11 24       	eor	r1, r1
  e8:	1f be       	out	0x3f, r1	; 63
  ea:	cf ef       	ldi	r28, 0xFF	; 255
  ec:	d1 e2       	ldi	r29, 0x21	; 33
  ee:	de bf       	out	0x3e, r29	; 62
  f0:	cd bf       	out	0x3d, r28	; 61
  f2:	00 e0       	ldi	r16, 0x00	; 0
  f4:	0c bf       	out	0x3c, r16	; 60

000000f6 <__do_copy_data>:
  f6:	12 e0       	ldi	r17, 0x02	; 2
  f8:	a0 e0       	ldi	r26, 0x00	; 0
  fa:	b2 e0       	ldi	r27, 0x02	; 2
  fc:	ea e1       	ldi	r30, 0x1A	; 26
  fe:	fd e0       	ldi	r31, 0x0D	; 13
 100:	00 e0       	ldi	r16, 0x00	; 0
 102:	0b bf       	out	0x3b, r16	; 59
 104:	02 c0       	rjmp	.+4      	; 0x10a <__do_copy_data+0x14>
 106:	07 90       	elpm	r0, Z+
 108:	0d 92       	st	X+, r0
 10a:	a0 33       	cpi	r26, 0x30	; 48
 10c:	b1 07       	cpc	r27, r17
 10e:	d9 f7       	brne	.-10     	; 0x106 <__do_copy_data+0x10>

00000110 <__do_clear_bss>:
 110:	22 e0       	ldi	r18, 0x02	; 2
 112:	a0 e3       	ldi	r26, 0x30	; 48
 114:	b2 e0       	ldi	r27, 0x02	; 2
 116:	01 c0       	rjmp	.+2      	; 0x11a <.do_clear_bss_start>

00000118 <.do_clear_bss_loop>:
 118:	1d 92       	st	X+, r1

0000011a <.do_clear_bss_start>:
 11a:	a0 3b       	cpi	r26, 0xB0	; 176
 11c:	b2 07       	cpc	r27, r18
 11e:	e1 f7       	brne	.-8      	; 0x118 <.do_clear_bss_loop>

00000120 <__do_global_ctors>:
 120:	10 e0       	ldi	r17, 0x00	; 0
 122:	c3 e7       	ldi	r28, 0x73	; 115
 124:	d0 e0       	ldi	r29, 0x00	; 0
 126:	00 e0       	ldi	r16, 0x00	; 0
 128:	05 c0       	rjmp	.+10     	; 0x134 <__do_global_ctors+0x14>
 12a:	21 97       	sbiw	r28, 0x01	; 1
 12c:	01 09       	sbc	r16, r1
 12e:	80 2f       	mov	r24, r16
 130:	fe 01       	movw	r30, r28
 132:	b6 d5       	rcall	.+2924   	; 0xca0 <__tablejump2__>
 134:	c2 37       	cpi	r28, 0x72	; 114
 136:	d1 07       	cpc	r29, r17
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	08 07       	cpc	r16, r24
 13c:	b1 f7       	brne	.-20     	; 0x12a <__do_global_ctors+0xa>
 13e:	ab d0       	rcall	.+342    	; 0x296 <main>
 140:	ea c5       	rjmp	.+3028   	; 0xd16 <_exit>

00000142 <__bad_interrupt>:
 142:	5e cf       	rjmp	.-324    	; 0x0 <__vectors>

00000144 <_ZN7encoder22Init_encoder_interruptEv>:



void encoder::Init_encoder_interrupt()
{
	sei();
 144:	78 94       	sei
	EICRA = 0b11111111;
 146:	8f ef       	ldi	r24, 0xFF	; 255
 148:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x700069>
	EIMSK |= (1<<INT0)|(1<<INT1) | (1<<INT2) | (1<<INT3);
 14c:	8d b3       	in	r24, 0x1d	; 29
 14e:	8f 60       	ori	r24, 0x0F	; 15
 150:	8d bb       	out	0x1d, r24	; 29
 152:	08 95       	ret

00000154 <_ZN7encoder10Init_timerEv>:
}

void encoder::Init_timer()
{
	sei();
 154:	78 94       	sei
	TCCR0B |= (1<<CS02) | (1<<CS00);
 156:	85 b5       	in	r24, 0x25	; 37
 158:	85 60       	ori	r24, 0x05	; 5
 15a:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = (1<<TOIE0);
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 162:	08 95       	ret

00000164 <_ZN5MotorC1Eh>:
		md.MOTOR_OCR_VALUE = ICR_TOP;
	}
	else
	md.MOTOR_OCR_VALUE = 20;
	m4.SetOcrValue(md.MOTOR_OCR_VALUE);
}
 164:	cf 93       	push	r28
 166:	df 93       	push	r29
 168:	ec 01       	movw	r28, r24
 16a:	68 83       	st	Y, r22
 16c:	70 d2       	rcall	.+1248   	; 0x64e <_ZN5Motor7InitPWMEv>
 16e:	ce 01       	movw	r24, r28
 170:	21 d3       	rcall	.+1602   	; 0x7b4 <_ZN5Motor9StopMotorEv>
 172:	60 e0       	ldi	r22, 0x00	; 0
 174:	70 e0       	ldi	r23, 0x00	; 0
 176:	ce 01       	movw	r24, r28
 178:	5e d3       	rcall	.+1724   	; 0x836 <_ZN5Motor11SetOcrValueEi>
 17a:	df 91       	pop	r29
 17c:	cf 91       	pop	r28
 17e:	08 95       	ret

00000180 <_Z12setTuningsM1v>:
 180:	8f 92       	push	r8
 182:	9f 92       	push	r9
 184:	af 92       	push	r10
 186:	bf 92       	push	r11
 188:	cf 92       	push	r12
 18a:	df 92       	push	r13
 18c:	ef 92       	push	r14
 18e:	ff 92       	push	r15
 190:	0f 93       	push	r16
 192:	1f 93       	push	r17
 194:	cf 93       	push	r28
 196:	df 93       	push	r29
 198:	00 91 3f 02 	lds	r16, 0x023F	; 0x80023f <e1+0x2>
 19c:	10 91 40 02 	lds	r17, 0x0240	; 0x800240 <e1+0x3>
 1a0:	10 93 a0 02 	sts	0x02A0, r17	; 0x8002a0 <ma+0xd>
 1a4:	00 93 9f 02 	sts	0x029F, r16	; 0x80029f <ma+0xc>
 1a8:	01 15       	cp	r16, r1
 1aa:	11 05       	cpc	r17, r1
 1ac:	09 f4       	brne	.+2      	; 0x1b0 <_Z12setTuningsM1v+0x30>
 1ae:	59 c0       	rjmp	.+178    	; 0x262 <_Z12setTuningsM1v+0xe2>
 1b0:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <SETPOINT>
 1b4:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <SETPOINT+0x1>
 1b8:	60 1b       	sub	r22, r16
 1ba:	71 0b       	sbc	r23, r17
 1bc:	c3 e9       	ldi	r28, 0x93	; 147
 1be:	d2 e0       	ldi	r29, 0x02	; 2
 1c0:	79 8b       	std	Y+17, r23	; 0x11
 1c2:	68 8b       	std	Y+16, r22	; 0x10
 1c4:	07 2e       	mov	r0, r23
 1c6:	00 0c       	add	r0, r0
 1c8:	88 0b       	sbc	r24, r24
 1ca:	99 0b       	sbc	r25, r25
 1cc:	7a d4       	rcall	.+2292   	; 0xac2 <__floatsisf>
 1ce:	4b 01       	movw	r8, r22
 1d0:	5c 01       	movw	r10, r24
 1d2:	2c 81       	ldd	r18, Y+4	; 0x04
 1d4:	3d 81       	ldd	r19, Y+5	; 0x05
 1d6:	4e 81       	ldd	r20, Y+6	; 0x06
 1d8:	5f 81       	ldd	r21, Y+7	; 0x07
 1da:	ff d4       	rcall	.+2558   	; 0xbda <__mulsf3>
 1dc:	2a 89       	ldd	r18, Y+18	; 0x12
 1de:	3b 89       	ldd	r19, Y+19	; 0x13
 1e0:	4c 89       	ldd	r20, Y+20	; 0x14
 1e2:	5d 89       	ldd	r21, Y+21	; 0x15
 1e4:	d7 d3       	rcall	.+1966   	; 0x994 <__addsf3>
 1e6:	6b 01       	movw	r12, r22
 1e8:	7c 01       	movw	r14, r24
 1ea:	6a 8b       	std	Y+18, r22	; 0x12
 1ec:	7b 8b       	std	Y+19, r23	; 0x13
 1ee:	8c 8b       	std	Y+20, r24	; 0x14
 1f0:	9d 8b       	std	Y+21, r25	; 0x15
 1f2:	28 81       	ld	r18, Y
 1f4:	39 81       	ldd	r19, Y+1	; 0x01
 1f6:	4a 81       	ldd	r20, Y+2	; 0x02
 1f8:	5b 81       	ldd	r21, Y+3	; 0x03
 1fa:	c5 01       	movw	r24, r10
 1fc:	b4 01       	movw	r22, r8
 1fe:	ed d4       	rcall	.+2522   	; 0xbda <__mulsf3>
 200:	a7 01       	movw	r20, r14
 202:	96 01       	movw	r18, r12
 204:	c7 d3       	rcall	.+1934   	; 0x994 <__addsf3>
 206:	6b 01       	movw	r12, r22
 208:	7c 01       	movw	r14, r24
 20a:	8e 89       	ldd	r24, Y+22	; 0x16
 20c:	9f 89       	ldd	r25, Y+23	; 0x17
 20e:	b8 01       	movw	r22, r16
 210:	68 1b       	sub	r22, r24
 212:	79 0b       	sbc	r23, r25
 214:	07 2e       	mov	r0, r23
 216:	00 0c       	add	r0, r0
 218:	88 0b       	sbc	r24, r24
 21a:	99 0b       	sbc	r25, r25
 21c:	52 d4       	rcall	.+2212   	; 0xac2 <__floatsisf>
 21e:	28 85       	ldd	r18, Y+8	; 0x08
 220:	39 85       	ldd	r19, Y+9	; 0x09
 222:	4a 85       	ldd	r20, Y+10	; 0x0a
 224:	5b 85       	ldd	r21, Y+11	; 0x0b
 226:	d9 d4       	rcall	.+2482   	; 0xbda <__mulsf3>
 228:	9b 01       	movw	r18, r22
 22a:	ac 01       	movw	r20, r24
 22c:	c7 01       	movw	r24, r14
 22e:	b6 01       	movw	r22, r12
 230:	b0 d3       	rcall	.+1888   	; 0x992 <__subsf3>
 232:	14 d4       	rcall	.+2088   	; 0xa5c <__fixsfsi>
 234:	7f 87       	std	Y+15, r23	; 0x0f
 236:	6e 87       	std	Y+14, r22	; 0x0e
 238:	1f 8b       	std	Y+23, r17	; 0x17
 23a:	0e 8b       	std	Y+22, r16	; 0x16
 23c:	28 8d       	ldd	r18, Y+24	; 0x18
 23e:	39 8d       	ldd	r19, Y+25	; 0x19
 240:	62 0f       	add	r22, r18
 242:	73 1f       	adc	r23, r19
 244:	6a 3f       	cpi	r22, 0xFA	; 250
 246:	71 05       	cpc	r23, r1
 248:	2c f4       	brge	.+10     	; 0x254 <_Z12setTuningsM1v+0xd4>
 24a:	70 93 ac 02 	sts	0x02AC, r23	; 0x8002ac <ma+0x19>
 24e:	60 93 ab 02 	sts	0x02AB, r22	; 0x8002ab <ma+0x18>
 252:	0d c0       	rjmp	.+26     	; 0x26e <_Z12setTuningsM1v+0xee>
 254:	89 ef       	ldi	r24, 0xF9	; 249
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	90 93 ac 02 	sts	0x02AC, r25	; 0x8002ac <ma+0x19>
 25c:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <ma+0x18>
 260:	06 c0       	rjmp	.+12     	; 0x26e <_Z12setTuningsM1v+0xee>
 262:	84 e1       	ldi	r24, 0x14	; 20
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	90 93 ac 02 	sts	0x02AC, r25	; 0x8002ac <ma+0x19>
 26a:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <ma+0x18>
 26e:	60 91 ab 02 	lds	r22, 0x02AB	; 0x8002ab <ma+0x18>
 272:	70 91 ac 02 	lds	r23, 0x02AC	; 0x8002ac <ma+0x19>
 276:	84 e4       	ldi	r24, 0x44	; 68
 278:	92 e0       	ldi	r25, 0x02	; 2
 27a:	dd d2       	rcall	.+1466   	; 0x836 <_ZN5Motor11SetOcrValueEi>
 27c:	df 91       	pop	r29
 27e:	cf 91       	pop	r28
 280:	1f 91       	pop	r17
 282:	0f 91       	pop	r16
 284:	ff 90       	pop	r15
 286:	ef 90       	pop	r14
 288:	df 90       	pop	r13
 28a:	cf 90       	pop	r12
 28c:	bf 90       	pop	r11
 28e:	af 90       	pop	r10
 290:	9f 90       	pop	r9
 292:	8f 90       	pop	r8
 294:	08 95       	ret

00000296 <main>:
char rcvdata ;

int main(void)
{
    sei();
	initUART0();
 296:	78 94       	sei
	inline void incrKP(void){kp += 0.05;}
	inline void incrKD(void){kd += 0.05;}
	inline void incrKI(void){ki += 0.05;}
	inline void dcrKP(void){kp -= 0.05;}
	inline void dcrKI(void){ki -= 0.05;}
	inline void dcrKD(void){kd -= 0.05;}
 298:	fd d2       	rcall	.+1530   	; 0x894 <_Z9initUART0v>
 29a:	c3 e9       	ldi	r28, 0x93	; 147
		//UART0TransmitString("motor4: kp= ");UART0TransmitData(md.kp);UART0TransmitString("\tki= ");UART0TransmitData(md.ki);UART0TransmitString(" kd=");UART0TransmitData(md.kd);
		UART0TransmitString("\t\t");
		UART0TransmitData(SETPOINT);
		//UART0TransmitString("\r\n");
		//
		UART0TransmitString("\tmotor1speed= ");UART0TransmitData(e1.speed);
 29c:	d2 e0       	ldi	r29, 0x02	; 2
	//m3.SetOcrValue(20);
	//m4.SetOcrValue(20);
    while (1) 
    {
		//movy();
		rcvdata = UART0Receive();
 29e:	0d e3       	ldi	r16, 0x3D	; 61
 2a0:	12 e0       	ldi	r17, 0x02	; 2
 2a2:	0c d3       	rcall	.+1560   	; 0x8bc <_Z12UART0Receivev>
 2a4:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <__data_end>
		if (rcvdata == 'd')
 2a8:	84 36       	cpi	r24, 0x64	; 100
	int error;
	double Iterm;
	int previnput;
	int MOTOR_OCR_VALUE = 20 ;
	
	inline void incrKP(void){kp += 0.05;}
 2aa:	71 f4       	brne	.+28     	; 0x2c8 <main+0x32>
 2ac:	2d ec       	ldi	r18, 0xCD	; 205
 2ae:	3c ec       	ldi	r19, 0xCC	; 204
 2b0:	4c e4       	ldi	r20, 0x4C	; 76
 2b2:	5d e3       	ldi	r21, 0x3D	; 61
 2b4:	68 81       	ld	r22, Y
 2b6:	79 81       	ldd	r23, Y+1	; 0x01
 2b8:	8a 81       	ldd	r24, Y+2	; 0x02
 2ba:	9b 81       	ldd	r25, Y+3	; 0x03
 2bc:	6b d3       	rcall	.+1750   	; 0x994 <__addsf3>
 2be:	68 83       	st	Y, r22
 2c0:	79 83       	std	Y+1, r23	; 0x01
 2c2:	8a 83       	std	Y+2, r24	; 0x02
 2c4:	9b 83       	std	Y+3, r25	; 0x03
			ma.incrKP();
		else if(rcvdata == 'w')
 2c6:	47 c0       	rjmp	.+142    	; 0x356 <main+0xc0>
 2c8:	87 37       	cpi	r24, 0x77	; 119
	inline void incrKD(void){kd += 0.05;}
 2ca:	71 f4       	brne	.+28     	; 0x2e8 <main+0x52>
 2cc:	2d ec       	ldi	r18, 0xCD	; 205
 2ce:	3c ec       	ldi	r19, 0xCC	; 204
 2d0:	4c e4       	ldi	r20, 0x4C	; 76
 2d2:	5d e3       	ldi	r21, 0x3D	; 61
 2d4:	68 85       	ldd	r22, Y+8	; 0x08
 2d6:	79 85       	ldd	r23, Y+9	; 0x09
 2d8:	8a 85       	ldd	r24, Y+10	; 0x0a
 2da:	9b 85       	ldd	r25, Y+11	; 0x0b
 2dc:	5b d3       	rcall	.+1718   	; 0x994 <__addsf3>
 2de:	68 87       	std	Y+8, r22	; 0x08
 2e0:	79 87       	std	Y+9, r23	; 0x09
 2e2:	8a 87       	std	Y+10, r24	; 0x0a
 2e4:	9b 87       	std	Y+11, r25	; 0x0b
			ma.incrKD();
		else if (rcvdata == 'a')
 2e6:	37 c0       	rjmp	.+110    	; 0x356 <main+0xc0>
 2e8:	81 36       	cpi	r24, 0x61	; 97
	inline void incrKI(void){ki += 0.05;}
	inline void dcrKP(void){kp -= 0.05;}
 2ea:	71 f4       	brne	.+28     	; 0x308 <main+0x72>
 2ec:	2d ec       	ldi	r18, 0xCD	; 205
 2ee:	3c ec       	ldi	r19, 0xCC	; 204
 2f0:	4c e4       	ldi	r20, 0x4C	; 76
 2f2:	5d e3       	ldi	r21, 0x3D	; 61
 2f4:	68 81       	ld	r22, Y
 2f6:	79 81       	ldd	r23, Y+1	; 0x01
 2f8:	8a 81       	ldd	r24, Y+2	; 0x02
 2fa:	9b 81       	ldd	r25, Y+3	; 0x03
 2fc:	4a d3       	rcall	.+1684   	; 0x992 <__subsf3>
 2fe:	68 83       	st	Y, r22
 300:	79 83       	std	Y+1, r23	; 0x01
 302:	8a 83       	std	Y+2, r24	; 0x02
 304:	9b 83       	std	Y+3, r25	; 0x03
			ma.dcrKP();
		else if(rcvdata == 's')
 306:	27 c0       	rjmp	.+78     	; 0x356 <main+0xc0>
 308:	83 37       	cpi	r24, 0x73	; 115
	inline void dcrKI(void){ki -= 0.05;}
	inline void dcrKD(void){kd -= 0.05;}
 30a:	71 f4       	brne	.+28     	; 0x328 <main+0x92>
 30c:	2d ec       	ldi	r18, 0xCD	; 205
 30e:	3c ec       	ldi	r19, 0xCC	; 204
 310:	4c e4       	ldi	r20, 0x4C	; 76
 312:	5d e3       	ldi	r21, 0x3D	; 61
 314:	68 85       	ldd	r22, Y+8	; 0x08
 316:	79 85       	ldd	r23, Y+9	; 0x09
 318:	8a 85       	ldd	r24, Y+10	; 0x0a
 31a:	9b 85       	ldd	r25, Y+11	; 0x0b
 31c:	3a d3       	rcall	.+1652   	; 0x992 <__subsf3>
 31e:	68 87       	std	Y+8, r22	; 0x08
 320:	79 87       	std	Y+9, r23	; 0x09
 322:	8a 87       	std	Y+10, r24	; 0x0a
 324:	9b 87       	std	Y+11, r25	; 0x0b
			ma.dcrKD();
		if(rcvdata == 'f')
 326:	17 c0       	rjmp	.+46     	; 0x356 <main+0xc0>
 328:	86 36       	cpi	r24, 0x66	; 102
		{SETPOINT += 3 ;}
 32a:	51 f4       	brne	.+20     	; 0x340 <main+0xaa>
 32c:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <SETPOINT>
 330:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <SETPOINT+0x1>
 334:	03 96       	adiw	r24, 0x03	; 3
 336:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <SETPOINT+0x1>
 33a:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <SETPOINT>
		if (rcvdata == 'g')
 33e:	0b c0       	rjmp	.+22     	; 0x356 <main+0xc0>
 340:	87 36       	cpi	r24, 0x67	; 103
			SETPOINT -= 3;
 342:	49 f4       	brne	.+18     	; 0x356 <main+0xc0>
 344:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <SETPOINT>
 348:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <SETPOINT+0x1>
 34c:	03 97       	sbiw	r24, 0x03	; 3
 34e:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <SETPOINT+0x1>
		setTuningsM1();
 352:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <SETPOINT>
		//setTuningsM2();
		//setTuningsM3();
		//setTuningsM4();
		//setTuningsM2();
		
		UART0TransmitString("motor1: kp= ");UART0TransmitData(ma.kp *100);UART0TransmitString(" ki= ");UART0TransmitData(ma.ki*100);UART0TransmitString(" kd=");UART0TransmitData(ma.kd*100);
 356:	14 df       	rcall	.-472    	; 0x180 <_Z12setTuningsM1v>
 358:	82 e0       	ldi	r24, 0x02	; 2
 35a:	92 e0       	ldi	r25, 0x02	; 2
 35c:	dc d2       	rcall	.+1464   	; 0x916 <_Z19UART0TransmitStringPKc>
 35e:	20 e0       	ldi	r18, 0x00	; 0
 360:	30 e0       	ldi	r19, 0x00	; 0
 362:	48 ec       	ldi	r20, 0xC8	; 200
 364:	52 e4       	ldi	r21, 0x42	; 66
 366:	68 81       	ld	r22, Y
 368:	79 81       	ldd	r23, Y+1	; 0x01
 36a:	8a 81       	ldd	r24, Y+2	; 0x02
 36c:	9b 81       	ldd	r25, Y+3	; 0x03
 36e:	35 d4       	rcall	.+2154   	; 0xbda <__mulsf3>
 370:	75 d3       	rcall	.+1770   	; 0xa5c <__fixsfsi>
 372:	cb 01       	movw	r24, r22
 374:	a8 d2       	rcall	.+1360   	; 0x8c6 <_Z17UART0TransmitDatai>
 376:	8f e0       	ldi	r24, 0x0F	; 15
 378:	92 e0       	ldi	r25, 0x02	; 2
 37a:	cd d2       	rcall	.+1434   	; 0x916 <_Z19UART0TransmitStringPKc>
 37c:	20 e0       	ldi	r18, 0x00	; 0
 37e:	30 e0       	ldi	r19, 0x00	; 0
 380:	48 ec       	ldi	r20, 0xC8	; 200
 382:	52 e4       	ldi	r21, 0x42	; 66
 384:	6c 81       	ldd	r22, Y+4	; 0x04
 386:	7d 81       	ldd	r23, Y+5	; 0x05
 388:	8e 81       	ldd	r24, Y+6	; 0x06
 38a:	9f 81       	ldd	r25, Y+7	; 0x07
 38c:	26 d4       	rcall	.+2124   	; 0xbda <__mulsf3>
 38e:	66 d3       	rcall	.+1740   	; 0xa5c <__fixsfsi>
 390:	cb 01       	movw	r24, r22
 392:	99 d2       	rcall	.+1330   	; 0x8c6 <_Z17UART0TransmitDatai>
 394:	85 e1       	ldi	r24, 0x15	; 21
 396:	92 e0       	ldi	r25, 0x02	; 2
 398:	be d2       	rcall	.+1404   	; 0x916 <_Z19UART0TransmitStringPKc>
 39a:	20 e0       	ldi	r18, 0x00	; 0
 39c:	30 e0       	ldi	r19, 0x00	; 0
 39e:	48 ec       	ldi	r20, 0xC8	; 200
 3a0:	52 e4       	ldi	r21, 0x42	; 66
 3a2:	68 85       	ldd	r22, Y+8	; 0x08
 3a4:	79 85       	ldd	r23, Y+9	; 0x09
		UART0TransmitString("\t\t");
 3a6:	8a 85       	ldd	r24, Y+10	; 0x0a
 3a8:	9b 85       	ldd	r25, Y+11	; 0x0b
 3aa:	17 d4       	rcall	.+2094   	; 0xbda <__mulsf3>
		//UART0TransmitString("motor2: kp= ");UART0TransmitData(mb.kp);UART0TransmitString("\tki= ");UART0TransmitData(mb.ki);UART0TransmitString(" kd=");UART0TransmitData(mb.kd);
		//UART0TransmitString("\t\t");
		//UART0TransmitString("motor3: kp= ");UART0TransmitData(mc.kp);UART0TransmitString("\tki= ");UART0TransmitData(mc.ki);UART0TransmitString(" kd=");UART0TransmitData(mc.kd);
		//UART0TransmitString("\t\t");
		//UART0TransmitString("motor4: kp= ");UART0TransmitData(md.kp);UART0TransmitString("\tki= ");UART0TransmitData(md.ki);UART0TransmitString(" kd=");UART0TransmitData(md.kd);
		UART0TransmitString("\t\t");
 3ac:	57 d3       	rcall	.+1710   	; 0xa5c <__fixsfsi>
 3ae:	cb 01       	movw	r24, r22
 3b0:	8a d2       	rcall	.+1300   	; 0x8c6 <_Z17UART0TransmitDatai>
 3b2:	8a e1       	ldi	r24, 0x1A	; 26
		UART0TransmitData(SETPOINT);
 3b4:	92 e0       	ldi	r25, 0x02	; 2
 3b6:	af d2       	rcall	.+1374   	; 0x916 <_Z19UART0TransmitStringPKc>
 3b8:	8a e1       	ldi	r24, 0x1A	; 26
 3ba:	92 e0       	ldi	r25, 0x02	; 2
 3bc:	ac d2       	rcall	.+1368   	; 0x916 <_Z19UART0TransmitStringPKc>
 3be:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <SETPOINT>
		//UART0TransmitString("\r\n");
		//
		UART0TransmitString("\tmotor1speed= ");UART0TransmitData(e1.speed);
 3c2:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <SETPOINT+0x1>
 3c6:	7f d2       	rcall	.+1278   	; 0x8c6 <_Z17UART0TransmitDatai>
 3c8:	8d e1       	ldi	r24, 0x1D	; 29
 3ca:	92 e0       	ldi	r25, 0x02	; 2
 3cc:	a4 d2       	rcall	.+1352   	; 0x916 <_Z19UART0TransmitStringPKc>
 3ce:	f8 01       	movw	r30, r16
 3d0:	82 81       	ldd	r24, Z+2	; 0x02
		//UART0TransmitString("\tmotor2speed= ");UART0TransmitData(e2.speed);
		//UART0TransmitString("\tmotor3speed= ");UART0TransmitData(e3.speed);
		//UART0TransmitString("\tmotor4speed= ");UART0TransmitData(e4.speed);
		UART0TransmitString("\r\n");
 3d2:	93 81       	ldd	r25, Z+3	; 0x03
 3d4:	78 d2       	rcall	.+1264   	; 0x8c6 <_Z17UART0TransmitDatai>
 3d6:	8c e2       	ldi	r24, 0x2C	; 44
 3d8:	92 e0       	ldi	r25, 0x02	; 2
	initUART0();
	//m1.SetOcrValue(20);
	//m2.SetOcrValue(20);
	//m3.SetOcrValue(20);
	//m4.SetOcrValue(20);
    while (1) 
 3da:	9d d2       	rcall	.+1338   	; 0x916 <_Z19UART0TransmitStringPKc>
 3dc:	62 cf       	rjmp	.-316    	; 0x2a2 <main+0xc>

000003de <__vector_1>:
    }
}


ISR(INT0_vect)
{
 3de:	1f 92       	push	r1
 3e0:	0f 92       	push	r0
 3e2:	0f b6       	in	r0, 0x3f	; 63
 3e4:	0f 92       	push	r0
 3e6:	11 24       	eor	r1, r1
 3e8:	0b b6       	in	r0, 0x3b	; 59
 3ea:	0f 92       	push	r0
 3ec:	8f 93       	push	r24
 3ee:	9f 93       	push	r25
 3f0:	ef 93       	push	r30
 3f2:	ff 93       	push	r31
	e1.count_encoder++;
 3f4:	ed e3       	ldi	r30, 0x3D	; 61
 3f6:	f2 e0       	ldi	r31, 0x02	; 2
 3f8:	80 81       	ld	r24, Z
 3fa:	91 81       	ldd	r25, Z+1	; 0x01
 3fc:	01 96       	adiw	r24, 0x01	; 1
 3fe:	91 83       	std	Z+1, r25	; 0x01
 400:	80 83       	st	Z, r24
}
 402:	ff 91       	pop	r31
 404:	ef 91       	pop	r30
 406:	9f 91       	pop	r25
 408:	8f 91       	pop	r24
 40a:	0f 90       	pop	r0
 40c:	0b be       	out	0x3b, r0	; 59
 40e:	0f 90       	pop	r0
 410:	0f be       	out	0x3f, r0	; 63
 412:	0f 90       	pop	r0
 414:	1f 90       	pop	r1
 416:	18 95       	reti

00000418 <__vector_4>:
ISR(INT3_vect)
{
 418:	1f 92       	push	r1
 41a:	0f 92       	push	r0
 41c:	0f b6       	in	r0, 0x3f	; 63
 41e:	0f 92       	push	r0
 420:	11 24       	eor	r1, r1
 422:	0b b6       	in	r0, 0x3b	; 59
 424:	0f 92       	push	r0
 426:	8f 93       	push	r24
 428:	9f 93       	push	r25
 42a:	ef 93       	push	r30
 42c:	ff 93       	push	r31
	e2.count_encoder++;
 42e:	e9 e3       	ldi	r30, 0x39	; 57
 430:	f2 e0       	ldi	r31, 0x02	; 2
 432:	80 81       	ld	r24, Z
 434:	91 81       	ldd	r25, Z+1	; 0x01
 436:	01 96       	adiw	r24, 0x01	; 1
 438:	91 83       	std	Z+1, r25	; 0x01
 43a:	80 83       	st	Z, r24
}
 43c:	ff 91       	pop	r31
 43e:	ef 91       	pop	r30
 440:	9f 91       	pop	r25
 442:	8f 91       	pop	r24
 444:	0f 90       	pop	r0
 446:	0b be       	out	0x3b, r0	; 59
 448:	0f 90       	pop	r0
 44a:	0f be       	out	0x3f, r0	; 63
 44c:	0f 90       	pop	r0
 44e:	1f 90       	pop	r1
 450:	18 95       	reti

00000452 <__vector_2>:
ISR(INT1_vect)
{
 452:	1f 92       	push	r1
 454:	0f 92       	push	r0
 456:	0f b6       	in	r0, 0x3f	; 63
 458:	0f 92       	push	r0
 45a:	11 24       	eor	r1, r1
 45c:	0b b6       	in	r0, 0x3b	; 59
 45e:	0f 92       	push	r0
 460:	8f 93       	push	r24
 462:	9f 93       	push	r25
 464:	ef 93       	push	r30
 466:	ff 93       	push	r31
	e3.count_encoder++;
 468:	e5 e3       	ldi	r30, 0x35	; 53
 46a:	f2 e0       	ldi	r31, 0x02	; 2
 46c:	80 81       	ld	r24, Z
 46e:	91 81       	ldd	r25, Z+1	; 0x01
 470:	01 96       	adiw	r24, 0x01	; 1
 472:	91 83       	std	Z+1, r25	; 0x01
 474:	80 83       	st	Z, r24
}
 476:	ff 91       	pop	r31
 478:	ef 91       	pop	r30
 47a:	9f 91       	pop	r25
 47c:	8f 91       	pop	r24
 47e:	0f 90       	pop	r0
 480:	0b be       	out	0x3b, r0	; 59
 482:	0f 90       	pop	r0
 484:	0f be       	out	0x3f, r0	; 63
 486:	0f 90       	pop	r0
 488:	1f 90       	pop	r1
 48a:	18 95       	reti

0000048c <__vector_3>:
ISR(INT2_vect)
{
 48c:	1f 92       	push	r1
 48e:	0f 92       	push	r0
 490:	0f b6       	in	r0, 0x3f	; 63
 492:	0f 92       	push	r0
 494:	11 24       	eor	r1, r1
 496:	0b b6       	in	r0, 0x3b	; 59
 498:	0f 92       	push	r0
 49a:	8f 93       	push	r24
 49c:	9f 93       	push	r25
 49e:	ef 93       	push	r30
 4a0:	ff 93       	push	r31
	e4.count_encoder++;
 4a2:	e1 e3       	ldi	r30, 0x31	; 49
 4a4:	f2 e0       	ldi	r31, 0x02	; 2
 4a6:	80 81       	ld	r24, Z
 4a8:	91 81       	ldd	r25, Z+1	; 0x01
 4aa:	01 96       	adiw	r24, 0x01	; 1
 4ac:	91 83       	std	Z+1, r25	; 0x01
 4ae:	80 83       	st	Z, r24
}
 4b0:	ff 91       	pop	r31
 4b2:	ef 91       	pop	r30
 4b4:	9f 91       	pop	r25
 4b6:	8f 91       	pop	r24
 4b8:	0f 90       	pop	r0
 4ba:	0b be       	out	0x3b, r0	; 59
 4bc:	0f 90       	pop	r0
 4be:	0f be       	out	0x3f, r0	; 63
 4c0:	0f 90       	pop	r0
 4c2:	1f 90       	pop	r1
 4c4:	18 95       	reti

000004c6 <__vector_23>:
ISR(TIMER0_OVF_vect)
{
 4c6:	1f 92       	push	r1
 4c8:	0f 92       	push	r0
 4ca:	0f b6       	in	r0, 0x3f	; 63
 4cc:	0f 92       	push	r0
 4ce:	11 24       	eor	r1, r1
 4d0:	0b b6       	in	r0, 0x3b	; 59
 4d2:	0f 92       	push	r0
 4d4:	2f 93       	push	r18
 4d6:	3f 93       	push	r19
 4d8:	4f 93       	push	r20
 4da:	5f 93       	push	r21
 4dc:	8f 93       	push	r24
 4de:	9f 93       	push	r25
 4e0:	af 93       	push	r26
 4e2:	bf 93       	push	r27
 4e4:	cf 93       	push	r28
 4e6:	df 93       	push	r29
 4e8:	ef 93       	push	r30
 4ea:	ff 93       	push	r31
	e1.speed = e1.count_encoder;
 4ec:	8d e3       	ldi	r24, 0x3D	; 61
 4ee:	92 e0       	ldi	r25, 0x02	; 2
 4f0:	fc 01       	movw	r30, r24
 4f2:	20 81       	ld	r18, Z
 4f4:	31 81       	ldd	r19, Z+1	; 0x01
 4f6:	33 83       	std	Z+3, r19	; 0x03
 4f8:	22 83       	std	Z+2, r18	; 0x02
	e2.speed = e2.count_encoder;
 4fa:	c9 e3       	ldi	r28, 0x39	; 57
 4fc:	d2 e0       	ldi	r29, 0x02	; 2
 4fe:	28 81       	ld	r18, Y
 500:	39 81       	ldd	r19, Y+1	; 0x01
 502:	3b 83       	std	Y+3, r19	; 0x03
 504:	2a 83       	std	Y+2, r18	; 0x02
	e3.speed = e3.count_encoder;
 506:	a5 e3       	ldi	r26, 0x35	; 53
 508:	b2 e0       	ldi	r27, 0x02	; 2
 50a:	2d 91       	ld	r18, X+
 50c:	3c 91       	ld	r19, X
 50e:	11 97       	sbiw	r26, 0x01	; 1
 510:	13 96       	adiw	r26, 0x03	; 3
 512:	3c 93       	st	X, r19
 514:	2e 93       	st	-X, r18
 516:	12 97       	sbiw	r26, 0x02	; 2
	e4.speed = e4.count_encoder;
 518:	41 e3       	ldi	r20, 0x31	; 49
 51a:	52 e0       	ldi	r21, 0x02	; 2
 51c:	fa 01       	movw	r30, r20
 51e:	20 81       	ld	r18, Z
 520:	31 81       	ldd	r19, Z+1	; 0x01
 522:	33 83       	std	Z+3, r19	; 0x03
 524:	22 83       	std	Z+2, r18	; 0x02
	e1.count_encoder = 0;
 526:	fc 01       	movw	r30, r24
 528:	11 82       	std	Z+1, r1	; 0x01
 52a:	10 82       	st	Z, r1
	e2.count_encoder = 0;
 52c:	19 82       	std	Y+1, r1	; 0x01
 52e:	18 82       	st	Y, r1
	e3.count_encoder = 0;
 530:	1d 92       	st	X+, r1
 532:	1c 92       	st	X, r1
	e4.count_encoder = 0;
 534:	fa 01       	movw	r30, r20
 536:	11 82       	std	Z+1, r1	; 0x01
 538:	10 82       	st	Z, r1
	
}
 53a:	ff 91       	pop	r31
 53c:	ef 91       	pop	r30
 53e:	df 91       	pop	r29
 540:	cf 91       	pop	r28
 542:	bf 91       	pop	r27
 544:	af 91       	pop	r26
 546:	9f 91       	pop	r25
 548:	8f 91       	pop	r24
 54a:	5f 91       	pop	r21
 54c:	4f 91       	pop	r20
 54e:	3f 91       	pop	r19
 550:	2f 91       	pop	r18
 552:	0f 90       	pop	r0
 554:	0b be       	out	0x3b, r0	; 59
 556:	0f 90       	pop	r0
 558:	0f be       	out	0x3f, r0	; 63
 55a:	0f 90       	pop	r0
 55c:	1f 90       	pop	r1
 55e:	18 95       	reti

00000560 <_GLOBAL__sub_I_SETPOINT>:
 560:	0f 93       	push	r16
 562:	1f 93       	push	r17
int SETPOINT = 10;

extern Motor m1,m2,m3,m4;
extern encoder e1,e2,e3,e4;

struct pid
 564:	e3 e9       	ldi	r30, 0x93	; 147
 566:	f2 e0       	ldi	r31, 0x02	; 2
 568:	00 e0       	ldi	r16, 0x00	; 0
 56a:	10 e0       	ldi	r17, 0x00	; 0
 56c:	20 e8       	ldi	r18, 0x80	; 128
 56e:	3f e3       	ldi	r19, 0x3F	; 63
 570:	00 83       	st	Z, r16
 572:	11 83       	std	Z+1, r17	; 0x01
 574:	22 83       	std	Z+2, r18	; 0x02
 576:	33 83       	std	Z+3, r19	; 0x03
 578:	4d ec       	ldi	r20, 0xCD	; 205
 57a:	5c ec       	ldi	r21, 0xCC	; 204
 57c:	6c e4       	ldi	r22, 0x4C	; 76
 57e:	7d e3       	ldi	r23, 0x3D	; 61
 580:	40 87       	std	Z+8, r20	; 0x08
 582:	51 87       	std	Z+9, r21	; 0x09
 584:	62 87       	std	Z+10, r22	; 0x0a
 586:	73 87       	std	Z+11, r23	; 0x0b
 588:	84 e1       	ldi	r24, 0x14	; 20
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	91 8f       	std	Z+25, r25	; 0x19
 58e:	80 8f       	std	Z+24, r24	; 0x18
 590:	e9 e7       	ldi	r30, 0x79	; 121
 592:	f2 e0       	ldi	r31, 0x02	; 2
 594:	00 83       	st	Z, r16
 596:	11 83       	std	Z+1, r17	; 0x01
 598:	22 83       	std	Z+2, r18	; 0x02
 59a:	33 83       	std	Z+3, r19	; 0x03
 59c:	40 87       	std	Z+8, r20	; 0x08
 59e:	51 87       	std	Z+9, r21	; 0x09
 5a0:	62 87       	std	Z+10, r22	; 0x0a
 5a2:	73 87       	std	Z+11, r23	; 0x0b
 5a4:	91 8f       	std	Z+25, r25	; 0x19
 5a6:	80 8f       	std	Z+24, r24	; 0x18
 5a8:	ef e5       	ldi	r30, 0x5F	; 95
 5aa:	f2 e0       	ldi	r31, 0x02	; 2
 5ac:	00 83       	st	Z, r16
 5ae:	11 83       	std	Z+1, r17	; 0x01
 5b0:	22 83       	std	Z+2, r18	; 0x02
 5b2:	33 83       	std	Z+3, r19	; 0x03
 5b4:	40 87       	std	Z+8, r20	; 0x08
 5b6:	51 87       	std	Z+9, r21	; 0x09
 5b8:	62 87       	std	Z+10, r22	; 0x0a
 5ba:	73 87       	std	Z+11, r23	; 0x0b
 5bc:	91 8f       	std	Z+25, r25	; 0x19
 5be:	80 8f       	std	Z+24, r24	; 0x18
 5c0:	e5 e4       	ldi	r30, 0x45	; 69
 5c2:	f2 e0       	ldi	r31, 0x02	; 2
 5c4:	00 83       	st	Z, r16
 5c6:	11 83       	std	Z+1, r17	; 0x01
 5c8:	22 83       	std	Z+2, r18	; 0x02
 5ca:	33 83       	std	Z+3, r19	; 0x03
 5cc:	40 87       	std	Z+8, r20	; 0x08
 5ce:	51 87       	std	Z+9, r21	; 0x09
 5d0:	62 87       	std	Z+10, r22	; 0x0a
 5d2:	73 87       	std	Z+11, r23	; 0x0b
 5d4:	91 8f       	std	Z+25, r25	; 0x19
 5d6:	80 8f       	std	Z+24, r24	; 0x18
#include "Motor.h"
#include <avr/interrupt.h>
#include "pid.h"
#include "uart.h"

Motor m1(1),m2(2),m3(3),m4(4);
 5d8:	61 e0       	ldi	r22, 0x01	; 1
 5da:	84 e4       	ldi	r24, 0x44	; 68
 5dc:	92 e0       	ldi	r25, 0x02	; 2
 5de:	c2 dd       	rcall	.-1148   	; 0x164 <_ZN5MotorC1Eh>
 5e0:	62 e0       	ldi	r22, 0x02	; 2
 5e2:	83 e4       	ldi	r24, 0x43	; 67
 5e4:	92 e0       	ldi	r25, 0x02	; 2
 5e6:	be dd       	rcall	.-1156   	; 0x164 <_ZN5MotorC1Eh>
 5e8:	63 e0       	ldi	r22, 0x03	; 3
 5ea:	82 e4       	ldi	r24, 0x42	; 66
 5ec:	92 e0       	ldi	r25, 0x02	; 2
 5ee:	ba dd       	rcall	.-1164   	; 0x164 <_ZN5MotorC1Eh>
 5f0:	64 e0       	ldi	r22, 0x04	; 4
 5f2:	81 e4       	ldi	r24, 0x41	; 65
 5f4:	92 e0       	ldi	r25, 0x02	; 2
 5f6:	b6 dd       	rcall	.-1172   	; 0x164 <_ZN5MotorC1Eh>
		
		int speed;
		encoder()
		{
			
			count_encoder= 0;
 5f8:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <e1+0x1>
 5fc:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <e1>
			Init_encoder_interrupt();
 600:	8d e3       	ldi	r24, 0x3D	; 61
 602:	92 e0       	ldi	r25, 0x02	; 2
			Init_timer();
 604:	9f dd       	rcall	.-1218   	; 0x144 <_ZN7encoder22Init_encoder_interruptEv>
 606:	8d e3       	ldi	r24, 0x3D	; 61
 608:	92 e0       	ldi	r25, 0x02	; 2
		
		int speed;
		encoder()
		{
			
			count_encoder= 0;
 60a:	a4 dd       	rcall	.-1208   	; 0x154 <_ZN7encoder10Init_timerEv>
 60c:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <e2+0x1>
			Init_encoder_interrupt();
 610:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <e2>
 614:	89 e3       	ldi	r24, 0x39	; 57
			Init_timer();
 616:	92 e0       	ldi	r25, 0x02	; 2
 618:	95 dd       	rcall	.-1238   	; 0x144 <_ZN7encoder22Init_encoder_interruptEv>
 61a:	89 e3       	ldi	r24, 0x39	; 57
		
		int speed;
		encoder()
		{
			
			count_encoder= 0;
 61c:	92 e0       	ldi	r25, 0x02	; 2
 61e:	9a dd       	rcall	.-1228   	; 0x154 <_ZN7encoder10Init_timerEv>
 620:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <e3+0x1>
			Init_encoder_interrupt();
 624:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <e3>
			Init_timer();
 628:	85 e3       	ldi	r24, 0x35	; 53
 62a:	92 e0       	ldi	r25, 0x02	; 2
		
		int speed;
		encoder()
		{
			
			count_encoder= 0;
 62c:	8b dd       	rcall	.-1258   	; 0x144 <_ZN7encoder22Init_encoder_interruptEv>
 62e:	85 e3       	ldi	r24, 0x35	; 53
 630:	92 e0       	ldi	r25, 0x02	; 2
 632:	90 dd       	rcall	.-1248   	; 0x154 <_ZN7encoder10Init_timerEv>
			Init_encoder_interrupt();
 634:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <e4+0x1>
 638:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <e4>
			Init_timer();
 63c:	81 e3       	ldi	r24, 0x31	; 49
 63e:	92 e0       	ldi	r25, 0x02	; 2
 640:	81 dd       	rcall	.-1278   	; 0x144 <_ZN7encoder22Init_encoder_interruptEv>
 642:	81 e3       	ldi	r24, 0x31	; 49
	e1.count_encoder = 0;
	e2.count_encoder = 0;
	e3.count_encoder = 0;
	e4.count_encoder = 0;
	
}
 644:	92 e0       	ldi	r25, 0x02	; 2
 646:	86 dd       	rcall	.-1268   	; 0x154 <_ZN7encoder10Init_timerEv>
 648:	1f 91       	pop	r17
 64a:	0f 91       	pop	r16
 64c:	08 95       	ret

0000064e <_ZN5Motor7InitPWMEv>:
			CLEAR	(DD_F3);
			SET		(DD_B3);
			break;
		case 4:
			CLEAR	(DD_F4);
			SET		(DD_B4);
 64e:	fc 01       	movw	r30, r24
 650:	80 81       	ld	r24, Z
 652:	81 30       	cpi	r24, 0x01	; 1
 654:	f1 f4       	brne	.+60     	; 0x692 <_ZN5Motor7InitPWMEv+0x44>
 656:	e7 e0       	ldi	r30, 0x07	; 7
 658:	f1 e0       	ldi	r31, 0x01	; 1
 65a:	80 81       	ld	r24, Z
 65c:	80 64       	ori	r24, 0x40	; 64
 65e:	80 83       	st	Z, r24
 660:	80 81       	ld	r24, Z
 662:	80 68       	ori	r24, 0x80	; 128
 664:	80 83       	st	Z, r24
 666:	ea e0       	ldi	r30, 0x0A	; 10
 668:	f1 e0       	ldi	r31, 0x01	; 1
 66a:	80 81       	ld	r24, Z
 66c:	80 62       	ori	r24, 0x20	; 32
 66e:	80 83       	st	Z, r24
 670:	e0 e2       	ldi	r30, 0x20	; 32
 672:	f1 e0       	ldi	r31, 0x01	; 1
 674:	80 81       	ld	r24, Z
 676:	8a 60       	ori	r24, 0x0A	; 10
 678:	80 83       	st	Z, r24
 67a:	e1 e2       	ldi	r30, 0x21	; 33
 67c:	f1 e0       	ldi	r31, 0x01	; 1
 67e:	80 81       	ld	r24, Z
 680:	8a 61       	ori	r24, 0x1A	; 26
 682:	80 83       	st	Z, r24
 684:	89 ef       	ldi	r24, 0xF9	; 249
 686:	90 e0       	ldi	r25, 0x00	; 0
 688:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__TEXT_REGION_LENGTH__+0x700127>
 68c:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__TEXT_REGION_LENGTH__+0x700126>
 690:	08 95       	ret
 692:	82 30       	cpi	r24, 0x02	; 2
 694:	f1 f4       	brne	.+60     	; 0x6d2 <_ZN5Motor7InitPWMEv+0x84>
 696:	e7 e0       	ldi	r30, 0x07	; 7
 698:	f1 e0       	ldi	r31, 0x01	; 1
 69a:	80 81       	ld	r24, Z
 69c:	84 60       	ori	r24, 0x04	; 4
 69e:	80 83       	st	Z, r24
 6a0:	80 81       	ld	r24, Z
 6a2:	88 60       	ori	r24, 0x08	; 8
 6a4:	80 83       	st	Z, r24
 6a6:	ea e0       	ldi	r30, 0x0A	; 10
 6a8:	f1 e0       	ldi	r31, 0x01	; 1
 6aa:	80 81       	ld	r24, Z
 6ac:	88 60       	ori	r24, 0x08	; 8
 6ae:	80 83       	st	Z, r24
 6b0:	e0 e2       	ldi	r30, 0x20	; 32
 6b2:	f1 e0       	ldi	r31, 0x01	; 1
 6b4:	80 81       	ld	r24, Z
 6b6:	82 68       	ori	r24, 0x82	; 130
 6b8:	80 83       	st	Z, r24
 6ba:	e1 e2       	ldi	r30, 0x21	; 33
 6bc:	f1 e0       	ldi	r31, 0x01	; 1
 6be:	80 81       	ld	r24, Z
 6c0:	8a 61       	ori	r24, 0x1A	; 26
 6c2:	80 83       	st	Z, r24
 6c4:	89 ef       	ldi	r24, 0xF9	; 249
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__TEXT_REGION_LENGTH__+0x700127>
 6cc:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__TEXT_REGION_LENGTH__+0x700126>
 6d0:	08 95       	ret
 6d2:	83 30       	cpi	r24, 0x03	; 3
 6d4:	f1 f4       	brne	.+60     	; 0x712 <_ZN5Motor7InitPWMEv+0xc4>
 6d6:	e7 e0       	ldi	r30, 0x07	; 7
 6d8:	f1 e0       	ldi	r31, 0x01	; 1
 6da:	80 81       	ld	r24, Z
 6dc:	80 61       	ori	r24, 0x10	; 16
 6de:	80 83       	st	Z, r24
 6e0:	80 81       	ld	r24, Z
 6e2:	80 62       	ori	r24, 0x20	; 32
 6e4:	80 83       	st	Z, r24
 6e6:	ea e0       	ldi	r30, 0x0A	; 10
 6e8:	f1 e0       	ldi	r31, 0x01	; 1
 6ea:	80 81       	ld	r24, Z
 6ec:	80 61       	ori	r24, 0x10	; 16
 6ee:	80 83       	st	Z, r24
 6f0:	e0 e2       	ldi	r30, 0x20	; 32
 6f2:	f1 e0       	ldi	r31, 0x01	; 1
 6f4:	80 81       	ld	r24, Z
 6f6:	82 62       	ori	r24, 0x22	; 34
 6f8:	80 83       	st	Z, r24
 6fa:	e1 e2       	ldi	r30, 0x21	; 33
 6fc:	f1 e0       	ldi	r31, 0x01	; 1
 6fe:	80 81       	ld	r24, Z
 700:	8a 61       	ori	r24, 0x1A	; 26
 702:	80 83       	st	Z, r24
 704:	89 ef       	ldi	r24, 0xF9	; 249
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__TEXT_REGION_LENGTH__+0x700127>
 70c:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__TEXT_REGION_LENGTH__+0x700126>
 710:	08 95       	ret
 712:	84 30       	cpi	r24, 0x04	; 4
 714:	e9 f4       	brne	.+58     	; 0x750 <_ZN5Motor7InitPWMEv+0x102>
 716:	e7 e0       	ldi	r30, 0x07	; 7
 718:	f1 e0       	ldi	r31, 0x01	; 1
 71a:	80 81       	ld	r24, Z
 71c:	81 60       	ori	r24, 0x01	; 1
 71e:	80 83       	st	Z, r24
 720:	80 81       	ld	r24, Z
 722:	82 60       	ori	r24, 0x02	; 2
 724:	80 83       	st	Z, r24
 726:	e1 e0       	ldi	r30, 0x01	; 1
 728:	f1 e0       	ldi	r31, 0x01	; 1
 72a:	80 81       	ld	r24, Z
 72c:	88 60       	ori	r24, 0x08	; 8
 72e:	80 83       	st	Z, r24
 730:	e0 ea       	ldi	r30, 0xA0	; 160
 732:	f0 e0       	ldi	r31, 0x00	; 0
 734:	80 81       	ld	r24, Z
 736:	82 68       	ori	r24, 0x82	; 130
 738:	80 83       	st	Z, r24
 73a:	e1 ea       	ldi	r30, 0xA1	; 161
 73c:	f0 e0       	ldi	r31, 0x00	; 0
 73e:	80 81       	ld	r24, Z
 740:	8a 61       	ori	r24, 0x1A	; 26
 742:	80 83       	st	Z, r24
 744:	89 ef       	ldi	r24, 0xF9	; 249
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	90 93 a7 00 	sts	0x00A7, r25	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
 74c:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
 750:	08 95       	ret

00000752 <_ZN5Motor19SetForwardDirectionEv>:
 752:	fc 01       	movw	r30, r24
 754:	80 81       	ld	r24, Z
 756:	82 30       	cpi	r24, 0x02	; 2
 758:	91 f0       	breq	.+36     	; 0x77e <_ZN5Motor19SetForwardDirectionEv+0x2c>
 75a:	18 f4       	brcc	.+6      	; 0x762 <_ZN5Motor19SetForwardDirectionEv+0x10>
 75c:	81 30       	cpi	r24, 0x01	; 1
 75e:	31 f0       	breq	.+12     	; 0x76c <_ZN5Motor19SetForwardDirectionEv+0x1a>
 760:	08 95       	ret
 762:	83 30       	cpi	r24, 0x03	; 3
 764:	a9 f0       	breq	.+42     	; 0x790 <_ZN5Motor19SetForwardDirectionEv+0x3e>
 766:	84 30       	cpi	r24, 0x04	; 4
 768:	e1 f0       	breq	.+56     	; 0x7a2 <_ZN5Motor19SetForwardDirectionEv+0x50>
 76a:	08 95       	ret
 76c:	e8 e0       	ldi	r30, 0x08	; 8
 76e:	f1 e0       	ldi	r31, 0x01	; 1
 770:	80 81       	ld	r24, Z
 772:	80 64       	ori	r24, 0x40	; 64
 774:	80 83       	st	Z, r24
 776:	80 81       	ld	r24, Z
 778:	8f 77       	andi	r24, 0x7F	; 127
 77a:	80 83       	st	Z, r24
 77c:	08 95       	ret
 77e:	e8 e0       	ldi	r30, 0x08	; 8
 780:	f1 e0       	ldi	r31, 0x01	; 1
 782:	80 81       	ld	r24, Z
 784:	84 60       	ori	r24, 0x04	; 4
 786:	80 83       	st	Z, r24
 788:	80 81       	ld	r24, Z
 78a:	87 7f       	andi	r24, 0xF7	; 247
 78c:	80 83       	st	Z, r24
 78e:	08 95       	ret
 790:	e8 e0       	ldi	r30, 0x08	; 8
 792:	f1 e0       	ldi	r31, 0x01	; 1
 794:	80 81       	ld	r24, Z
 796:	80 61       	ori	r24, 0x10	; 16
 798:	80 83       	st	Z, r24
 79a:	80 81       	ld	r24, Z
 79c:	8f 7d       	andi	r24, 0xDF	; 223
 79e:	80 83       	st	Z, r24
 7a0:	08 95       	ret
 7a2:	e8 e0       	ldi	r30, 0x08	; 8
 7a4:	f1 e0       	ldi	r31, 0x01	; 1
 7a6:	80 81       	ld	r24, Z
 7a8:	81 60       	ori	r24, 0x01	; 1
 7aa:	80 83       	st	Z, r24
 7ac:	80 81       	ld	r24, Z
 7ae:	8d 7f       	andi	r24, 0xFD	; 253
 7b0:	80 83       	st	Z, r24
 7b2:	08 95       	ret

000007b4 <_ZN5Motor9StopMotorEv>:

}

void Motor::StopMotor()
{
	switch(num)
 7b4:	fc 01       	movw	r30, r24
 7b6:	80 81       	ld	r24, Z
 7b8:	82 30       	cpi	r24, 0x02	; 2
 7ba:	b1 f0       	breq	.+44     	; 0x7e8 <_ZN5Motor9StopMotorEv+0x34>
 7bc:	18 f4       	brcc	.+6      	; 0x7c4 <_ZN5Motor9StopMotorEv+0x10>
 7be:	81 30       	cpi	r24, 0x01	; 1
 7c0:	31 f0       	breq	.+12     	; 0x7ce <_ZN5Motor9StopMotorEv+0x1a>
 7c2:	08 95       	ret
 7c4:	83 30       	cpi	r24, 0x03	; 3
 7c6:	e9 f0       	breq	.+58     	; 0x802 <_ZN5Motor9StopMotorEv+0x4e>
 7c8:	84 30       	cpi	r24, 0x04	; 4
 7ca:	41 f1       	breq	.+80     	; 0x81c <_ZN5Motor9StopMotorEv+0x68>
 7cc:	08 95       	ret
	{
		case 1:
			CLEAR	(DD_F1);
 7ce:	e8 e0       	ldi	r30, 0x08	; 8
 7d0:	f1 e0       	ldi	r31, 0x01	; 1
 7d2:	80 81       	ld	r24, Z
 7d4:	8f 7b       	andi	r24, 0xBF	; 191
 7d6:	80 83       	st	Z, r24
			CLEAR	(DD_B1);
 7d8:	80 81       	ld	r24, Z
 7da:	8f 77       	andi	r24, 0x7F	; 127
 7dc:	80 83       	st	Z, r24

			PWM_OCR1 = 0;
 7de:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <__TEXT_REGION_LENGTH__+0x70012d>
 7e2:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <__TEXT_REGION_LENGTH__+0x70012c>
			break;
 7e6:	08 95       	ret
		case 2:
			CLEAR	(DD_F2);
 7e8:	e8 e0       	ldi	r30, 0x08	; 8
 7ea:	f1 e0       	ldi	r31, 0x01	; 1
 7ec:	80 81       	ld	r24, Z
 7ee:	8b 7f       	andi	r24, 0xFB	; 251
 7f0:	80 83       	st	Z, r24
			CLEAR	(DD_B2);
 7f2:	80 81       	ld	r24, Z
 7f4:	87 7f       	andi	r24, 0xF7	; 247
 7f6:	80 83       	st	Z, r24

			PWM_OCR2 = 0;
 7f8:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
 7fc:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
			break;
 800:	08 95       	ret
		case 3:
			CLEAR	(DD_F3);
 802:	e8 e0       	ldi	r30, 0x08	; 8
 804:	f1 e0       	ldi	r31, 0x01	; 1
 806:	80 81       	ld	r24, Z
 808:	8f 7e       	andi	r24, 0xEF	; 239
 80a:	80 83       	st	Z, r24
			CLEAR	(DD_B3);
 80c:	80 81       	ld	r24, Z
 80e:	8f 7d       	andi	r24, 0xDF	; 223
 810:	80 83       	st	Z, r24

			PWM_OCR3 = 0;
 812:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <__TEXT_REGION_LENGTH__+0x70012b>
 816:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>
			break;
 81a:	08 95       	ret
		case 4:
			CLEAR	(DD_F4);
 81c:	e8 e0       	ldi	r30, 0x08	; 8
 81e:	f1 e0       	ldi	r31, 0x01	; 1
 820:	80 81       	ld	r24, Z
 822:	8e 7f       	andi	r24, 0xFE	; 254
 824:	80 83       	st	Z, r24
			CLEAR	(DD_B4);
 826:	80 81       	ld	r24, Z
 828:	8d 7f       	andi	r24, 0xFD	; 253
 82a:	80 83       	st	Z, r24

			PWM_OCR4 = 0;
 82c:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 830:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 834:	08 95       	ret

00000836 <_ZN5Motor11SetOcrValueEi>:
	}
}


void Motor::SetOcrValue(int Ocr)
{
 836:	0f 93       	push	r16
 838:	1f 93       	push	r17
 83a:	cf 93       	push	r28
 83c:	df 93       	push	r29
 83e:	8c 01       	movw	r16, r24
 840:	eb 01       	movw	r28, r22
  if(Ocr>0)
 842:	1c 16       	cp	r1, r28
 844:	1d 06       	cpc	r1, r29
	SetForwardDirection();
 846:	0c f4       	brge	.+2      	; 0x84a <_ZN5Motor11SetOcrValueEi+0x14>
	switch(num)
 848:	84 df       	rcall	.-248    	; 0x752 <_ZN5Motor19SetForwardDirectionEv>
 84a:	f8 01       	movw	r30, r16
 84c:	80 81       	ld	r24, Z
 84e:	82 30       	cpi	r24, 0x02	; 2
 850:	71 f0       	breq	.+28     	; 0x86e <_ZN5Motor11SetOcrValueEi+0x38>
 852:	18 f4       	brcc	.+6      	; 0x85a <_ZN5Motor11SetOcrValueEi+0x24>
 854:	81 30       	cpi	r24, 0x01	; 1
 856:	31 f0       	breq	.+12     	; 0x864 <_ZN5Motor11SetOcrValueEi+0x2e>
 858:	18 c0       	rjmp	.+48     	; 0x88a <_ZN5Motor11SetOcrValueEi+0x54>
 85a:	83 30       	cpi	r24, 0x03	; 3
 85c:	69 f0       	breq	.+26     	; 0x878 <_ZN5Motor11SetOcrValueEi+0x42>
 85e:	84 30       	cpi	r24, 0x04	; 4
 860:	81 f0       	breq	.+32     	; 0x882 <_ZN5Motor11SetOcrValueEi+0x4c>
	{
		case 1:
			PWM_OCR1	= Ocr;
 862:	13 c0       	rjmp	.+38     	; 0x88a <_ZN5Motor11SetOcrValueEi+0x54>
 864:	d0 93 2d 01 	sts	0x012D, r29	; 0x80012d <__TEXT_REGION_LENGTH__+0x70012d>
 868:	c0 93 2c 01 	sts	0x012C, r28	; 0x80012c <__TEXT_REGION_LENGTH__+0x70012c>
			break;
		case 2:
			PWM_OCR2	= Ocr;
 86c:	0e c0       	rjmp	.+28     	; 0x88a <_ZN5Motor11SetOcrValueEi+0x54>
 86e:	d0 93 29 01 	sts	0x0129, r29	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
 872:	c0 93 28 01 	sts	0x0128, r28	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
			break;
		case 3:
			PWM_OCR3	= Ocr;
 876:	09 c0       	rjmp	.+18     	; 0x88a <_ZN5Motor11SetOcrValueEi+0x54>
 878:	d0 93 2b 01 	sts	0x012B, r29	; 0x80012b <__TEXT_REGION_LENGTH__+0x70012b>
 87c:	c0 93 2a 01 	sts	0x012A, r28	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>
			break;
		case 4:
			PWM_OCR4	= Ocr;
 880:	04 c0       	rjmp	.+8      	; 0x88a <_ZN5Motor11SetOcrValueEi+0x54>
 882:	d0 93 a9 00 	sts	0x00A9, r29	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 886:	c0 93 a8 00 	sts	0x00A8, r28	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
			break;
	}
}
 88a:	df 91       	pop	r29
 88c:	cf 91       	pop	r28
 88e:	1f 91       	pop	r17
 890:	0f 91       	pop	r16
 892:	08 95       	ret

00000894 <_Z9initUART0v>:

void UART2TransmitString(const char *s)
{
	while(*s)
	UART2Transmit(*s++);
}
 894:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 898:	87 e6       	ldi	r24, 0x67	; 103
 89a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 89e:	88 e9       	ldi	r24, 0x98	; 152
 8a0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 8a4:	86 e0       	ldi	r24, 0x06	; 6
 8a6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 8aa:	08 95       	ret

000008ac <_Z13UART0Transmith>:
 8ac:	e0 ec       	ldi	r30, 0xC0	; 192
 8ae:	f0 e0       	ldi	r31, 0x00	; 0
 8b0:	90 81       	ld	r25, Z
 8b2:	95 ff       	sbrs	r25, 5
 8b4:	fd cf       	rjmp	.-6      	; 0x8b0 <_Z13UART0Transmith+0x4>
 8b6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 8ba:	08 95       	ret

000008bc <_Z12UART0Receivev>:
 8bc:	80 91 af 02 	lds	r24, 0x02AF	; 0x8002af <buffer>
 8c0:	10 92 af 02 	sts	0x02AF, r1	; 0x8002af <buffer>
 8c4:	08 95       	ret

000008c6 <_Z17UART0TransmitDatai>:
 8c6:	0f 93       	push	r16
 8c8:	1f 93       	push	r17
 8ca:	cf 93       	push	r28
 8cc:	df 93       	push	r29
 8ce:	cd b7       	in	r28, 0x3d	; 61
 8d0:	de b7       	in	r29, 0x3e	; 62
 8d2:	64 97       	sbiw	r28, 0x14	; 20
 8d4:	0f b6       	in	r0, 0x3f	; 63
 8d6:	f8 94       	cli
 8d8:	de bf       	out	0x3e, r29	; 62
 8da:	0f be       	out	0x3f, r0	; 63
 8dc:	cd bf       	out	0x3d, r28	; 61
 8de:	4a e0       	ldi	r20, 0x0A	; 10
 8e0:	be 01       	movw	r22, r28
 8e2:	6f 5f       	subi	r22, 0xFF	; 255
 8e4:	7f 4f       	sbci	r23, 0xFF	; 255
 8e6:	e4 d1       	rcall	.+968    	; 0xcb0 <__itoa_ncheck>
 8e8:	89 81       	ldd	r24, Y+1	; 0x01
 8ea:	88 23       	and	r24, r24
 8ec:	49 f0       	breq	.+18     	; 0x900 <_Z17UART0TransmitDatai+0x3a>
 8ee:	8e 01       	movw	r16, r28
 8f0:	0e 5f       	subi	r16, 0xFE	; 254
 8f2:	1f 4f       	sbci	r17, 0xFF	; 255
 8f4:	db df       	rcall	.-74     	; 0x8ac <_Z13UART0Transmith>
 8f6:	f8 01       	movw	r30, r16
 8f8:	81 91       	ld	r24, Z+
 8fa:	8f 01       	movw	r16, r30
 8fc:	81 11       	cpse	r24, r1
 8fe:	fa cf       	rjmp	.-12     	; 0x8f4 <_Z17UART0TransmitDatai+0x2e>
 900:	64 96       	adiw	r28, 0x14	; 20
 902:	0f b6       	in	r0, 0x3f	; 63
 904:	f8 94       	cli
 906:	de bf       	out	0x3e, r29	; 62
 908:	0f be       	out	0x3f, r0	; 63
 90a:	cd bf       	out	0x3d, r28	; 61
 90c:	df 91       	pop	r29
 90e:	cf 91       	pop	r28
 910:	1f 91       	pop	r17
 912:	0f 91       	pop	r16
 914:	08 95       	ret

00000916 <_Z19UART0TransmitStringPKc>:
 916:	cf 93       	push	r28
 918:	df 93       	push	r29
 91a:	ec 01       	movw	r28, r24
 91c:	88 81       	ld	r24, Y
 91e:	88 23       	and	r24, r24
 920:	29 f0       	breq	.+10     	; 0x92c <_Z19UART0TransmitStringPKc+0x16>
 922:	21 96       	adiw	r28, 0x01	; 1
 924:	c3 df       	rcall	.-122    	; 0x8ac <_Z13UART0Transmith>
 926:	89 91       	ld	r24, Y+
 928:	81 11       	cpse	r24, r1
 92a:	fc cf       	rjmp	.-8      	; 0x924 <_Z19UART0TransmitStringPKc+0xe>
 92c:	df 91       	pop	r29
 92e:	cf 91       	pop	r28
 930:	08 95       	ret

00000932 <__vector_25>:

ISR(USART0_RX_vect)
{
 932:	1f 92       	push	r1
 934:	0f 92       	push	r0
 936:	0f b6       	in	r0, 0x3f	; 63
 938:	0f 92       	push	r0
 93a:	11 24       	eor	r1, r1
 93c:	8f 93       	push	r24
	buffer=UDR0;
 93e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 942:	80 93 af 02 	sts	0x02AF, r24	; 0x8002af <buffer>
	
}
 946:	8f 91       	pop	r24
 948:	0f 90       	pop	r0
 94a:	0f be       	out	0x3f, r0	; 63
 94c:	0f 90       	pop	r0
 94e:	1f 90       	pop	r1
 950:	18 95       	reti

00000952 <__vector_36>:

ISR(USART1_RX_vect)
{
 952:	1f 92       	push	r1
 954:	0f 92       	push	r0
 956:	0f b6       	in	r0, 0x3f	; 63
 958:	0f 92       	push	r0
 95a:	11 24       	eor	r1, r1
 95c:	8f 93       	push	r24
	buffer1=UDR1;
 95e:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
 962:	80 93 ae 02 	sts	0x02AE, r24	; 0x8002ae <buffer1>
	
}
 966:	8f 91       	pop	r24
 968:	0f 90       	pop	r0
 96a:	0f be       	out	0x3f, r0	; 63
 96c:	0f 90       	pop	r0
 96e:	1f 90       	pop	r1
 970:	18 95       	reti

00000972 <__vector_51>:

ISR(USART2_RX_vect)
{
 972:	1f 92       	push	r1
 974:	0f 92       	push	r0
 976:	0f b6       	in	r0, 0x3f	; 63
 978:	0f 92       	push	r0
 97a:	11 24       	eor	r1, r1
 97c:	8f 93       	push	r24
	buffer2=UDR2;
 97e:	80 91 d6 00 	lds	r24, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
 982:	80 93 ad 02 	sts	0x02AD, r24	; 0x8002ad <buffer2>
	
}
 986:	8f 91       	pop	r24
 988:	0f 90       	pop	r0
 98a:	0f be       	out	0x3f, r0	; 63
 98c:	0f 90       	pop	r0
 98e:	1f 90       	pop	r1
 990:	18 95       	reti

00000992 <__subsf3>:
 992:	50 58       	subi	r21, 0x80	; 128

00000994 <__addsf3>:
 994:	bb 27       	eor	r27, r27
 996:	aa 27       	eor	r26, r26
 998:	0e d0       	rcall	.+28     	; 0x9b6 <__addsf3x>
 99a:	e5 c0       	rjmp	.+458    	; 0xb66 <__fp_round>
 99c:	d6 d0       	rcall	.+428    	; 0xb4a <__fp_pscA>
 99e:	30 f0       	brcs	.+12     	; 0x9ac <__addsf3+0x18>
 9a0:	db d0       	rcall	.+438    	; 0xb58 <__fp_pscB>
 9a2:	20 f0       	brcs	.+8      	; 0x9ac <__addsf3+0x18>
 9a4:	31 f4       	brne	.+12     	; 0x9b2 <__addsf3+0x1e>
 9a6:	9f 3f       	cpi	r25, 0xFF	; 255
 9a8:	11 f4       	brne	.+4      	; 0x9ae <__addsf3+0x1a>
 9aa:	1e f4       	brtc	.+6      	; 0x9b2 <__addsf3+0x1e>
 9ac:	cb c0       	rjmp	.+406    	; 0xb44 <__fp_nan>
 9ae:	0e f4       	brtc	.+2      	; 0x9b2 <__addsf3+0x1e>
 9b0:	e0 95       	com	r30
 9b2:	e7 fb       	bst	r30, 7
 9b4:	c1 c0       	rjmp	.+386    	; 0xb38 <__fp_inf>

000009b6 <__addsf3x>:
 9b6:	e9 2f       	mov	r30, r25
 9b8:	e7 d0       	rcall	.+462    	; 0xb88 <__fp_split3>
 9ba:	80 f3       	brcs	.-32     	; 0x99c <__addsf3+0x8>
 9bc:	ba 17       	cp	r27, r26
 9be:	62 07       	cpc	r22, r18
 9c0:	73 07       	cpc	r23, r19
 9c2:	84 07       	cpc	r24, r20
 9c4:	95 07       	cpc	r25, r21
 9c6:	18 f0       	brcs	.+6      	; 0x9ce <__addsf3x+0x18>
 9c8:	71 f4       	brne	.+28     	; 0x9e6 <__addsf3x+0x30>
 9ca:	9e f5       	brtc	.+102    	; 0xa32 <__addsf3x+0x7c>
 9cc:	ff c0       	rjmp	.+510    	; 0xbcc <__fp_zero>
 9ce:	0e f4       	brtc	.+2      	; 0x9d2 <__addsf3x+0x1c>
 9d0:	e0 95       	com	r30
 9d2:	0b 2e       	mov	r0, r27
 9d4:	ba 2f       	mov	r27, r26
 9d6:	a0 2d       	mov	r26, r0
 9d8:	0b 01       	movw	r0, r22
 9da:	b9 01       	movw	r22, r18
 9dc:	90 01       	movw	r18, r0
 9de:	0c 01       	movw	r0, r24
 9e0:	ca 01       	movw	r24, r20
 9e2:	a0 01       	movw	r20, r0
 9e4:	11 24       	eor	r1, r1
 9e6:	ff 27       	eor	r31, r31
 9e8:	59 1b       	sub	r21, r25
 9ea:	99 f0       	breq	.+38     	; 0xa12 <__addsf3x+0x5c>
 9ec:	59 3f       	cpi	r21, 0xF9	; 249
 9ee:	50 f4       	brcc	.+20     	; 0xa04 <__addsf3x+0x4e>
 9f0:	50 3e       	cpi	r21, 0xE0	; 224
 9f2:	68 f1       	brcs	.+90     	; 0xa4e <__addsf3x+0x98>
 9f4:	1a 16       	cp	r1, r26
 9f6:	f0 40       	sbci	r31, 0x00	; 0
 9f8:	a2 2f       	mov	r26, r18
 9fa:	23 2f       	mov	r18, r19
 9fc:	34 2f       	mov	r19, r20
 9fe:	44 27       	eor	r20, r20
 a00:	58 5f       	subi	r21, 0xF8	; 248
 a02:	f3 cf       	rjmp	.-26     	; 0x9ea <__addsf3x+0x34>
 a04:	46 95       	lsr	r20
 a06:	37 95       	ror	r19
 a08:	27 95       	ror	r18
 a0a:	a7 95       	ror	r26
 a0c:	f0 40       	sbci	r31, 0x00	; 0
 a0e:	53 95       	inc	r21
 a10:	c9 f7       	brne	.-14     	; 0xa04 <__addsf3x+0x4e>
 a12:	7e f4       	brtc	.+30     	; 0xa32 <__addsf3x+0x7c>
 a14:	1f 16       	cp	r1, r31
 a16:	ba 0b       	sbc	r27, r26
 a18:	62 0b       	sbc	r22, r18
 a1a:	73 0b       	sbc	r23, r19
 a1c:	84 0b       	sbc	r24, r20
 a1e:	ba f0       	brmi	.+46     	; 0xa4e <__addsf3x+0x98>
 a20:	91 50       	subi	r25, 0x01	; 1
 a22:	a1 f0       	breq	.+40     	; 0xa4c <__addsf3x+0x96>
 a24:	ff 0f       	add	r31, r31
 a26:	bb 1f       	adc	r27, r27
 a28:	66 1f       	adc	r22, r22
 a2a:	77 1f       	adc	r23, r23
 a2c:	88 1f       	adc	r24, r24
 a2e:	c2 f7       	brpl	.-16     	; 0xa20 <__addsf3x+0x6a>
 a30:	0e c0       	rjmp	.+28     	; 0xa4e <__addsf3x+0x98>
 a32:	ba 0f       	add	r27, r26
 a34:	62 1f       	adc	r22, r18
 a36:	73 1f       	adc	r23, r19
 a38:	84 1f       	adc	r24, r20
 a3a:	48 f4       	brcc	.+18     	; 0xa4e <__addsf3x+0x98>
 a3c:	87 95       	ror	r24
 a3e:	77 95       	ror	r23
 a40:	67 95       	ror	r22
 a42:	b7 95       	ror	r27
 a44:	f7 95       	ror	r31
 a46:	9e 3f       	cpi	r25, 0xFE	; 254
 a48:	08 f0       	brcs	.+2      	; 0xa4c <__addsf3x+0x96>
 a4a:	b3 cf       	rjmp	.-154    	; 0x9b2 <__addsf3+0x1e>
 a4c:	93 95       	inc	r25
 a4e:	88 0f       	add	r24, r24
 a50:	08 f0       	brcs	.+2      	; 0xa54 <__addsf3x+0x9e>
 a52:	99 27       	eor	r25, r25
 a54:	ee 0f       	add	r30, r30
 a56:	97 95       	ror	r25
 a58:	87 95       	ror	r24
 a5a:	08 95       	ret

00000a5c <__fixsfsi>:
 a5c:	04 d0       	rcall	.+8      	; 0xa66 <__fixunssfsi>
 a5e:	68 94       	set
 a60:	b1 11       	cpse	r27, r1
 a62:	b5 c0       	rjmp	.+362    	; 0xbce <__fp_szero>
 a64:	08 95       	ret

00000a66 <__fixunssfsi>:
 a66:	98 d0       	rcall	.+304    	; 0xb98 <__fp_splitA>
 a68:	88 f0       	brcs	.+34     	; 0xa8c <__fixunssfsi+0x26>
 a6a:	9f 57       	subi	r25, 0x7F	; 127
 a6c:	90 f0       	brcs	.+36     	; 0xa92 <__fixunssfsi+0x2c>
 a6e:	b9 2f       	mov	r27, r25
 a70:	99 27       	eor	r25, r25
 a72:	b7 51       	subi	r27, 0x17	; 23
 a74:	a0 f0       	brcs	.+40     	; 0xa9e <__fixunssfsi+0x38>
 a76:	d1 f0       	breq	.+52     	; 0xaac <__fixunssfsi+0x46>
 a78:	66 0f       	add	r22, r22
 a7a:	77 1f       	adc	r23, r23
 a7c:	88 1f       	adc	r24, r24
 a7e:	99 1f       	adc	r25, r25
 a80:	1a f0       	brmi	.+6      	; 0xa88 <__fixunssfsi+0x22>
 a82:	ba 95       	dec	r27
 a84:	c9 f7       	brne	.-14     	; 0xa78 <__fixunssfsi+0x12>
 a86:	12 c0       	rjmp	.+36     	; 0xaac <__fixunssfsi+0x46>
 a88:	b1 30       	cpi	r27, 0x01	; 1
 a8a:	81 f0       	breq	.+32     	; 0xaac <__fixunssfsi+0x46>
 a8c:	9f d0       	rcall	.+318    	; 0xbcc <__fp_zero>
 a8e:	b1 e0       	ldi	r27, 0x01	; 1
 a90:	08 95       	ret
 a92:	9c c0       	rjmp	.+312    	; 0xbcc <__fp_zero>
 a94:	67 2f       	mov	r22, r23
 a96:	78 2f       	mov	r23, r24
 a98:	88 27       	eor	r24, r24
 a9a:	b8 5f       	subi	r27, 0xF8	; 248
 a9c:	39 f0       	breq	.+14     	; 0xaac <__fixunssfsi+0x46>
 a9e:	b9 3f       	cpi	r27, 0xF9	; 249
 aa0:	cc f3       	brlt	.-14     	; 0xa94 <__fixunssfsi+0x2e>
 aa2:	86 95       	lsr	r24
 aa4:	77 95       	ror	r23
 aa6:	67 95       	ror	r22
 aa8:	b3 95       	inc	r27
 aaa:	d9 f7       	brne	.-10     	; 0xaa2 <__fixunssfsi+0x3c>
 aac:	3e f4       	brtc	.+14     	; 0xabc <__fixunssfsi+0x56>
 aae:	90 95       	com	r25
 ab0:	80 95       	com	r24
 ab2:	70 95       	com	r23
 ab4:	61 95       	neg	r22
 ab6:	7f 4f       	sbci	r23, 0xFF	; 255
 ab8:	8f 4f       	sbci	r24, 0xFF	; 255
 aba:	9f 4f       	sbci	r25, 0xFF	; 255
 abc:	08 95       	ret

00000abe <__floatunsisf>:
 abe:	e8 94       	clt
 ac0:	09 c0       	rjmp	.+18     	; 0xad4 <__floatsisf+0x12>

00000ac2 <__floatsisf>:
 ac2:	97 fb       	bst	r25, 7
 ac4:	3e f4       	brtc	.+14     	; 0xad4 <__floatsisf+0x12>
 ac6:	90 95       	com	r25
 ac8:	80 95       	com	r24
 aca:	70 95       	com	r23
 acc:	61 95       	neg	r22
 ace:	7f 4f       	sbci	r23, 0xFF	; 255
 ad0:	8f 4f       	sbci	r24, 0xFF	; 255
 ad2:	9f 4f       	sbci	r25, 0xFF	; 255
 ad4:	99 23       	and	r25, r25
 ad6:	a9 f0       	breq	.+42     	; 0xb02 <__floatsisf+0x40>
 ad8:	f9 2f       	mov	r31, r25
 ada:	96 e9       	ldi	r25, 0x96	; 150
 adc:	bb 27       	eor	r27, r27
 ade:	93 95       	inc	r25
 ae0:	f6 95       	lsr	r31
 ae2:	87 95       	ror	r24
 ae4:	77 95       	ror	r23
 ae6:	67 95       	ror	r22
 ae8:	b7 95       	ror	r27
 aea:	f1 11       	cpse	r31, r1
 aec:	f8 cf       	rjmp	.-16     	; 0xade <__floatsisf+0x1c>
 aee:	fa f4       	brpl	.+62     	; 0xb2e <__floatsisf+0x6c>
 af0:	bb 0f       	add	r27, r27
 af2:	11 f4       	brne	.+4      	; 0xaf8 <__floatsisf+0x36>
 af4:	60 ff       	sbrs	r22, 0
 af6:	1b c0       	rjmp	.+54     	; 0xb2e <__floatsisf+0x6c>
 af8:	6f 5f       	subi	r22, 0xFF	; 255
 afa:	7f 4f       	sbci	r23, 0xFF	; 255
 afc:	8f 4f       	sbci	r24, 0xFF	; 255
 afe:	9f 4f       	sbci	r25, 0xFF	; 255
 b00:	16 c0       	rjmp	.+44     	; 0xb2e <__floatsisf+0x6c>
 b02:	88 23       	and	r24, r24
 b04:	11 f0       	breq	.+4      	; 0xb0a <__floatsisf+0x48>
 b06:	96 e9       	ldi	r25, 0x96	; 150
 b08:	11 c0       	rjmp	.+34     	; 0xb2c <__floatsisf+0x6a>
 b0a:	77 23       	and	r23, r23
 b0c:	21 f0       	breq	.+8      	; 0xb16 <__floatsisf+0x54>
 b0e:	9e e8       	ldi	r25, 0x8E	; 142
 b10:	87 2f       	mov	r24, r23
 b12:	76 2f       	mov	r23, r22
 b14:	05 c0       	rjmp	.+10     	; 0xb20 <__floatsisf+0x5e>
 b16:	66 23       	and	r22, r22
 b18:	71 f0       	breq	.+28     	; 0xb36 <__floatsisf+0x74>
 b1a:	96 e8       	ldi	r25, 0x86	; 134
 b1c:	86 2f       	mov	r24, r22
 b1e:	70 e0       	ldi	r23, 0x00	; 0
 b20:	60 e0       	ldi	r22, 0x00	; 0
 b22:	2a f0       	brmi	.+10     	; 0xb2e <__floatsisf+0x6c>
 b24:	9a 95       	dec	r25
 b26:	66 0f       	add	r22, r22
 b28:	77 1f       	adc	r23, r23
 b2a:	88 1f       	adc	r24, r24
 b2c:	da f7       	brpl	.-10     	; 0xb24 <__floatsisf+0x62>
 b2e:	88 0f       	add	r24, r24
 b30:	96 95       	lsr	r25
 b32:	87 95       	ror	r24
 b34:	97 f9       	bld	r25, 7
 b36:	08 95       	ret

00000b38 <__fp_inf>:
 b38:	97 f9       	bld	r25, 7
 b3a:	9f 67       	ori	r25, 0x7F	; 127
 b3c:	80 e8       	ldi	r24, 0x80	; 128
 b3e:	70 e0       	ldi	r23, 0x00	; 0
 b40:	60 e0       	ldi	r22, 0x00	; 0
 b42:	08 95       	ret

00000b44 <__fp_nan>:
 b44:	9f ef       	ldi	r25, 0xFF	; 255
 b46:	80 ec       	ldi	r24, 0xC0	; 192
 b48:	08 95       	ret

00000b4a <__fp_pscA>:
 b4a:	00 24       	eor	r0, r0
 b4c:	0a 94       	dec	r0
 b4e:	16 16       	cp	r1, r22
 b50:	17 06       	cpc	r1, r23
 b52:	18 06       	cpc	r1, r24
 b54:	09 06       	cpc	r0, r25
 b56:	08 95       	ret

00000b58 <__fp_pscB>:
 b58:	00 24       	eor	r0, r0
 b5a:	0a 94       	dec	r0
 b5c:	12 16       	cp	r1, r18
 b5e:	13 06       	cpc	r1, r19
 b60:	14 06       	cpc	r1, r20
 b62:	05 06       	cpc	r0, r21
 b64:	08 95       	ret

00000b66 <__fp_round>:
 b66:	09 2e       	mov	r0, r25
 b68:	03 94       	inc	r0
 b6a:	00 0c       	add	r0, r0
 b6c:	11 f4       	brne	.+4      	; 0xb72 <__fp_round+0xc>
 b6e:	88 23       	and	r24, r24
 b70:	52 f0       	brmi	.+20     	; 0xb86 <__fp_round+0x20>
 b72:	bb 0f       	add	r27, r27
 b74:	40 f4       	brcc	.+16     	; 0xb86 <__fp_round+0x20>
 b76:	bf 2b       	or	r27, r31
 b78:	11 f4       	brne	.+4      	; 0xb7e <__fp_round+0x18>
 b7a:	60 ff       	sbrs	r22, 0
 b7c:	04 c0       	rjmp	.+8      	; 0xb86 <__fp_round+0x20>
 b7e:	6f 5f       	subi	r22, 0xFF	; 255
 b80:	7f 4f       	sbci	r23, 0xFF	; 255
 b82:	8f 4f       	sbci	r24, 0xFF	; 255
 b84:	9f 4f       	sbci	r25, 0xFF	; 255
 b86:	08 95       	ret

00000b88 <__fp_split3>:
 b88:	57 fd       	sbrc	r21, 7
 b8a:	90 58       	subi	r25, 0x80	; 128
 b8c:	44 0f       	add	r20, r20
 b8e:	55 1f       	adc	r21, r21
 b90:	59 f0       	breq	.+22     	; 0xba8 <__fp_splitA+0x10>
 b92:	5f 3f       	cpi	r21, 0xFF	; 255
 b94:	71 f0       	breq	.+28     	; 0xbb2 <__fp_splitA+0x1a>
 b96:	47 95       	ror	r20

00000b98 <__fp_splitA>:
 b98:	88 0f       	add	r24, r24
 b9a:	97 fb       	bst	r25, 7
 b9c:	99 1f       	adc	r25, r25
 b9e:	61 f0       	breq	.+24     	; 0xbb8 <__fp_splitA+0x20>
 ba0:	9f 3f       	cpi	r25, 0xFF	; 255
 ba2:	79 f0       	breq	.+30     	; 0xbc2 <__fp_splitA+0x2a>
 ba4:	87 95       	ror	r24
 ba6:	08 95       	ret
 ba8:	12 16       	cp	r1, r18
 baa:	13 06       	cpc	r1, r19
 bac:	14 06       	cpc	r1, r20
 bae:	55 1f       	adc	r21, r21
 bb0:	f2 cf       	rjmp	.-28     	; 0xb96 <__fp_split3+0xe>
 bb2:	46 95       	lsr	r20
 bb4:	f1 df       	rcall	.-30     	; 0xb98 <__fp_splitA>
 bb6:	08 c0       	rjmp	.+16     	; 0xbc8 <__fp_splitA+0x30>
 bb8:	16 16       	cp	r1, r22
 bba:	17 06       	cpc	r1, r23
 bbc:	18 06       	cpc	r1, r24
 bbe:	99 1f       	adc	r25, r25
 bc0:	f1 cf       	rjmp	.-30     	; 0xba4 <__fp_splitA+0xc>
 bc2:	86 95       	lsr	r24
 bc4:	71 05       	cpc	r23, r1
 bc6:	61 05       	cpc	r22, r1
 bc8:	08 94       	sec
 bca:	08 95       	ret

00000bcc <__fp_zero>:
 bcc:	e8 94       	clt

00000bce <__fp_szero>:
 bce:	bb 27       	eor	r27, r27
 bd0:	66 27       	eor	r22, r22
 bd2:	77 27       	eor	r23, r23
 bd4:	cb 01       	movw	r24, r22
 bd6:	97 f9       	bld	r25, 7
 bd8:	08 95       	ret

00000bda <__mulsf3>:
 bda:	0b d0       	rcall	.+22     	; 0xbf2 <__mulsf3x>
 bdc:	c4 cf       	rjmp	.-120    	; 0xb66 <__fp_round>
 bde:	b5 df       	rcall	.-150    	; 0xb4a <__fp_pscA>
 be0:	28 f0       	brcs	.+10     	; 0xbec <__mulsf3+0x12>
 be2:	ba df       	rcall	.-140    	; 0xb58 <__fp_pscB>
 be4:	18 f0       	brcs	.+6      	; 0xbec <__mulsf3+0x12>
 be6:	95 23       	and	r25, r21
 be8:	09 f0       	breq	.+2      	; 0xbec <__mulsf3+0x12>
 bea:	a6 cf       	rjmp	.-180    	; 0xb38 <__fp_inf>
 bec:	ab cf       	rjmp	.-170    	; 0xb44 <__fp_nan>
 bee:	11 24       	eor	r1, r1
 bf0:	ee cf       	rjmp	.-36     	; 0xbce <__fp_szero>

00000bf2 <__mulsf3x>:
 bf2:	ca df       	rcall	.-108    	; 0xb88 <__fp_split3>
 bf4:	a0 f3       	brcs	.-24     	; 0xbde <__mulsf3+0x4>

00000bf6 <__mulsf3_pse>:
 bf6:	95 9f       	mul	r25, r21
 bf8:	d1 f3       	breq	.-12     	; 0xbee <__mulsf3+0x14>
 bfa:	95 0f       	add	r25, r21
 bfc:	50 e0       	ldi	r21, 0x00	; 0
 bfe:	55 1f       	adc	r21, r21
 c00:	62 9f       	mul	r22, r18
 c02:	f0 01       	movw	r30, r0
 c04:	72 9f       	mul	r23, r18
 c06:	bb 27       	eor	r27, r27
 c08:	f0 0d       	add	r31, r0
 c0a:	b1 1d       	adc	r27, r1
 c0c:	63 9f       	mul	r22, r19
 c0e:	aa 27       	eor	r26, r26
 c10:	f0 0d       	add	r31, r0
 c12:	b1 1d       	adc	r27, r1
 c14:	aa 1f       	adc	r26, r26
 c16:	64 9f       	mul	r22, r20
 c18:	66 27       	eor	r22, r22
 c1a:	b0 0d       	add	r27, r0
 c1c:	a1 1d       	adc	r26, r1
 c1e:	66 1f       	adc	r22, r22
 c20:	82 9f       	mul	r24, r18
 c22:	22 27       	eor	r18, r18
 c24:	b0 0d       	add	r27, r0
 c26:	a1 1d       	adc	r26, r1
 c28:	62 1f       	adc	r22, r18
 c2a:	73 9f       	mul	r23, r19
 c2c:	b0 0d       	add	r27, r0
 c2e:	a1 1d       	adc	r26, r1
 c30:	62 1f       	adc	r22, r18
 c32:	83 9f       	mul	r24, r19
 c34:	a0 0d       	add	r26, r0
 c36:	61 1d       	adc	r22, r1
 c38:	22 1f       	adc	r18, r18
 c3a:	74 9f       	mul	r23, r20
 c3c:	33 27       	eor	r19, r19
 c3e:	a0 0d       	add	r26, r0
 c40:	61 1d       	adc	r22, r1
 c42:	23 1f       	adc	r18, r19
 c44:	84 9f       	mul	r24, r20
 c46:	60 0d       	add	r22, r0
 c48:	21 1d       	adc	r18, r1
 c4a:	82 2f       	mov	r24, r18
 c4c:	76 2f       	mov	r23, r22
 c4e:	6a 2f       	mov	r22, r26
 c50:	11 24       	eor	r1, r1
 c52:	9f 57       	subi	r25, 0x7F	; 127
 c54:	50 40       	sbci	r21, 0x00	; 0
 c56:	8a f0       	brmi	.+34     	; 0xc7a <__mulsf3_pse+0x84>
 c58:	e1 f0       	breq	.+56     	; 0xc92 <__mulsf3_pse+0x9c>
 c5a:	88 23       	and	r24, r24
 c5c:	4a f0       	brmi	.+18     	; 0xc70 <__mulsf3_pse+0x7a>
 c5e:	ee 0f       	add	r30, r30
 c60:	ff 1f       	adc	r31, r31
 c62:	bb 1f       	adc	r27, r27
 c64:	66 1f       	adc	r22, r22
 c66:	77 1f       	adc	r23, r23
 c68:	88 1f       	adc	r24, r24
 c6a:	91 50       	subi	r25, 0x01	; 1
 c6c:	50 40       	sbci	r21, 0x00	; 0
 c6e:	a9 f7       	brne	.-22     	; 0xc5a <__mulsf3_pse+0x64>
 c70:	9e 3f       	cpi	r25, 0xFE	; 254
 c72:	51 05       	cpc	r21, r1
 c74:	70 f0       	brcs	.+28     	; 0xc92 <__mulsf3_pse+0x9c>
 c76:	60 cf       	rjmp	.-320    	; 0xb38 <__fp_inf>
 c78:	aa cf       	rjmp	.-172    	; 0xbce <__fp_szero>
 c7a:	5f 3f       	cpi	r21, 0xFF	; 255
 c7c:	ec f3       	brlt	.-6      	; 0xc78 <__mulsf3_pse+0x82>
 c7e:	98 3e       	cpi	r25, 0xE8	; 232
 c80:	dc f3       	brlt	.-10     	; 0xc78 <__mulsf3_pse+0x82>
 c82:	86 95       	lsr	r24
 c84:	77 95       	ror	r23
 c86:	67 95       	ror	r22
 c88:	b7 95       	ror	r27
 c8a:	f7 95       	ror	r31
 c8c:	e7 95       	ror	r30
 c8e:	9f 5f       	subi	r25, 0xFF	; 255
 c90:	c1 f7       	brne	.-16     	; 0xc82 <__mulsf3_pse+0x8c>
 c92:	fe 2b       	or	r31, r30
 c94:	88 0f       	add	r24, r24
 c96:	91 1d       	adc	r25, r1
 c98:	96 95       	lsr	r25
 c9a:	87 95       	ror	r24
 c9c:	97 f9       	bld	r25, 7
 c9e:	08 95       	ret

00000ca0 <__tablejump2__>:
 ca0:	ee 0f       	add	r30, r30
 ca2:	ff 1f       	adc	r31, r31
 ca4:	88 1f       	adc	r24, r24
 ca6:	8b bf       	out	0x3b, r24	; 59
 ca8:	07 90       	elpm	r0, Z+
 caa:	f6 91       	elpm	r31, Z
 cac:	e0 2d       	mov	r30, r0
 cae:	19 94       	eijmp

00000cb0 <__itoa_ncheck>:
 cb0:	bb 27       	eor	r27, r27
 cb2:	4a 30       	cpi	r20, 0x0A	; 10
 cb4:	31 f4       	brne	.+12     	; 0xcc2 <__itoa_ncheck+0x12>
 cb6:	99 23       	and	r25, r25
 cb8:	22 f4       	brpl	.+8      	; 0xcc2 <__itoa_ncheck+0x12>
 cba:	bd e2       	ldi	r27, 0x2D	; 45
 cbc:	90 95       	com	r25
 cbe:	81 95       	neg	r24
 cc0:	9f 4f       	sbci	r25, 0xFF	; 255
 cc2:	01 c0       	rjmp	.+2      	; 0xcc6 <__utoa_common>

00000cc4 <__utoa_ncheck>:
 cc4:	bb 27       	eor	r27, r27

00000cc6 <__utoa_common>:
 cc6:	fb 01       	movw	r30, r22
 cc8:	55 27       	eor	r21, r21
 cca:	aa 27       	eor	r26, r26
 ccc:	88 0f       	add	r24, r24
 cce:	99 1f       	adc	r25, r25
 cd0:	aa 1f       	adc	r26, r26
 cd2:	a4 17       	cp	r26, r20
 cd4:	10 f0       	brcs	.+4      	; 0xcda <__utoa_common+0x14>
 cd6:	a4 1b       	sub	r26, r20
 cd8:	83 95       	inc	r24
 cda:	50 51       	subi	r21, 0x10	; 16
 cdc:	b9 f7       	brne	.-18     	; 0xccc <__utoa_common+0x6>
 cde:	a0 5d       	subi	r26, 0xD0	; 208
 ce0:	aa 33       	cpi	r26, 0x3A	; 58
 ce2:	08 f0       	brcs	.+2      	; 0xce6 <__utoa_common+0x20>
 ce4:	a9 5d       	subi	r26, 0xD9	; 217
 ce6:	a1 93       	st	Z+, r26
 ce8:	00 97       	sbiw	r24, 0x00	; 0
 cea:	79 f7       	brne	.-34     	; 0xcca <__utoa_common+0x4>
 cec:	b1 11       	cpse	r27, r1
 cee:	b1 93       	st	Z+, r27
 cf0:	11 92       	st	Z+, r1
 cf2:	cb 01       	movw	r24, r22
 cf4:	00 c0       	rjmp	.+0      	; 0xcf6 <strrev>

00000cf6 <strrev>:
 cf6:	dc 01       	movw	r26, r24
 cf8:	fc 01       	movw	r30, r24
 cfa:	67 2f       	mov	r22, r23
 cfc:	71 91       	ld	r23, Z+
 cfe:	77 23       	and	r23, r23
 d00:	e1 f7       	brne	.-8      	; 0xcfa <strrev+0x4>
 d02:	32 97       	sbiw	r30, 0x02	; 2
 d04:	04 c0       	rjmp	.+8      	; 0xd0e <strrev+0x18>
 d06:	7c 91       	ld	r23, X
 d08:	6d 93       	st	X+, r22
 d0a:	70 83       	st	Z, r23
 d0c:	62 91       	ld	r22, -Z
 d0e:	ae 17       	cp	r26, r30
 d10:	bf 07       	cpc	r27, r31
 d12:	c8 f3       	brcs	.-14     	; 0xd06 <strrev+0x10>
 d14:	08 95       	ret

00000d16 <_exit>:
 d16:	f8 94       	cli

00000d18 <__stop_program>:
 d18:	ff cf       	rjmp	.-2      	; 0xd18 <__stop_program>
